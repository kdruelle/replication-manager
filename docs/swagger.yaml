definitions:
  cluster.APIUser:
    properties:
      grants:
        additionalProperties:
          type: boolean
        type: object
      roles:
        additionalProperties:
          type: boolean
        type: object
      user:
        type: string
    type: object
  cluster.Agent:
    properties:
      cpuCores:
        type: integer
      cpuFreq:
        type: integer
      hostName:
        type: string
      id:
        type: string
      memBytes:
        type: integer
      memFreeBytes:
        type: integer
      osKernel:
        type: string
      osName:
        type: string
      status:
        type: string
      version:
        type: string
    type: object
  cluster.Alerts:
    properties:
      errors:
        items:
          $ref: '#/definitions/state.StateHttp'
        type: array
      warnings:
        items:
          $ref: '#/definitions/state.StateHttp'
        type: array
    type: object
  cluster.Cluster:
    properties:
      activePassiveStatus:
        type: string
      agents:
        items:
          $ref: '#/definitions/cluster.Agent'
        type: array
      apiUsers:
        additionalProperties:
          $ref: '#/definitions/cluster.APIUser'
        type: object
      backupList:
        $ref: '#/definitions/config.BackupMetaMap'
      backupStat:
        $ref: '#/definitions/repmanv3.BackupStat'
      blacklist:
        items:
          $ref: '#/definitions/regexp.Regexp'
        type: array
      canConnectVault:
        type: boolean
      canInitNodes:
        type: boolean
      cleanReplication:
        description: used in testing
        type: boolean
      config:
        $ref: '#/definitions/github_com_signal18_replication-manager_config.Config'
      configurator:
        $ref: '#/definitions/configurator.Configurator'
      dbServers:
        items:
          type: string
        type: array
      dbServersCrashes:
        description: This will be purged on all db node up
        items:
          $ref: '#/definitions/cluster.Crash'
        type: array
      diffVariables:
        items:
          $ref: '#/definitions/cluster.VariableDiff'
        type: array
      diskType:
        additionalProperties:
          type: string
        type: object
      failoverCounter:
        type: integer
      failoverHistory:
        description: This will be used for PITR
        items:
          $ref: '#/definitions/cluster.Crash'
        type: array
      failoverLastTime:
        type: integer
      fsType:
        additionalProperties:
          type: boolean
        type: object
      haveDBTLSCert:
        type: boolean
      haveDBTLSOldCert:
        type: boolean
      inBinlogBackup:
        type: boolean
      inLogicalBackup:
        type: boolean
      inPhysicalBackup:
        type: boolean
      inResticBackup:
        type: boolean
      inRollingRestart:
        type: boolean
      isAlertDisable:
        type: boolean
      isAllDbUp:
        type: boolean
      isCapturing:
        type: boolean
      isClusterDown:
        type: boolean
      isDown:
        type: boolean
      isExportPush:
        type: boolean
      isFailable:
        type: boolean
      isFailedArbitrator:
        type: boolean
      isGettingSlowLog:
        type: boolean
      isGitPull:
        type: boolean
      isGitPush:
        type: boolean
      isLostMajority:
        type: boolean
      isMasterDown:
        type: boolean
      isNeedDatabasesConfigChange:
        type: boolean
      isNeedDatabasesReprov:
        type: boolean
      isNeedDatabasesRestart:
        type: boolean
      isNeedDatabasesRollingReprov:
        type: boolean
      isNeedDatabasesRollingRestart:
        type: boolean
      isNeedProxiesConfigChange:
        type: boolean
      isNeedProxiesRestart:
        type: boolean
      isNeedProxyRestart:
        type: boolean
      isNotMonitoring:
        type: boolean
      isPostgres:
        type: boolean
      isProvision:
        type: boolean
      isSplitBrain:
        type: boolean
      isValidBackup:
        type: boolean
      jobResults:
        $ref: '#/definitions/config.TasksMap'
      lastDelayStatPrint:
        type: string
      log:
        $ref: '#/definitions/s18log.HttpLog'
      logTask:
        $ref: '#/definitions/s18log.HttpLog'
      monitorSpin:
        type: string
      monitorType:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      proxyServers:
        items:
          type: string
        type: array
      slaHistory:
        items:
          $ref: '#/definitions/state.Sla'
        type: array
      slavesConnected:
        type: integer
      slavesOldestMasterFile:
        $ref: '#/definitions/cluster.SlavesOldestMasterFile'
      sqlErrorLog:
        $ref: '#/definitions/s18log.HttpLog'
      sqlGeneralLog:
        $ref: '#/definitions/s18log.HttpLog'
      sstAvailablePorts:
        additionalProperties:
          type: string
        type: object
      stateMachine:
        allOf:
        - $ref: '#/definitions/state.StateMachine'
        description: |-
          dbUser                        string                      `json:"-"`
          oldDbUser string `json:"-"`
          dbPass                        string                      `json:"-"`
          oldDbPass string `json:"-"`
          rplUser                   string                      `json:"-"`
          rplPass                   string                      `json:"-"`
          proxysqlUser              string                      `json:"-"`
          proxysqlPass              string                      `json:"-"`
      tenant:
        type: string
      topology:
        type: string
      topologyType:
        additionalProperties:
          type: string
        type: object
      uptime:
        type: string
      uptimeFailable:
        type: string
      uptimeSemisync:
        type: string
      useBlacklist:
        type: boolean
      useWhitelist:
        type: boolean
      versionsMap:
        $ref: '#/definitions/config.VersionsMap'
      vmType:
        additionalProperties:
          type: boolean
        type: object
      waitingFailover:
        type: integer
      waitingRejoin:
        type: integer
      waitingSwitchover:
        type: integer
      whitelist:
        items:
          $ref: '#/definitions/regexp.Regexp'
        type: array
      workLoad:
        $ref: '#/definitions/config.WorkLoad'
      workingDir:
        type: string
    type: object
  cluster.ClusterForm:
    properties:
      clusterName:
        type: string
      orchestrator:
        type: string
      plan:
        type: string
    type: object
  cluster.Crash:
    properties:
      electedMasterURL:
        type: string
      failoverIOGtid:
        items:
          $ref: '#/definitions/gtid.Gtid'
        type: array
      failoverMasterLogFile:
        type: string
      failoverMasterLogPos:
        type: string
      failoverSemiSyncSlaveStatus:
        type: boolean
      newMasterLogFile:
        type: string
      newMasterLogPos:
        type: string
      switchover:
        type: boolean
      unixTimestamp:
        type: integer
      url:
        type: string
    type: object
  cluster.DelayStat:
    properties:
      counter:
        description: Increment
        type: integer
      delay:
        description: Average Seconds of Delay
        type: number
      delayCount:
        description: Number of Delay Occurred
        type: integer
      slaveErrCount:
        description: Number of Slave Err Occurred
        type: integer
    type: object
  cluster.DelayStatHistory:
    properties:
      delayDT:
        type: string
      delayStat:
        $ref: '#/definitions/cluster.DelayStat'
    type: object
  cluster.Diff:
    properties:
      serverName:
        type: string
      variableValue:
        type: string
    type: object
  cluster.GraphiteFilterList:
    properties:
      blacklist:
        type: string
      whitelist:
        type: string
    type: object
  cluster.ServerBackupMeta:
    properties:
      logical:
        $ref: '#/definitions/config.BackupMetadata'
      physical:
        $ref: '#/definitions/config.BackupMetadata'
    type: object
  cluster.ServerDelayStat:
    properties:
      current:
        $ref: '#/definitions/cluster.DelayStat'
      currentDT:
        type: string
      delayHistory:
        items:
          $ref: '#/definitions/cluster.DelayStatHistory'
        type: array
      rotated:
        $ref: '#/definitions/cluster.DelayStat'
      total:
        allOf:
        - $ref: '#/definitions/cluster.DelayStat'
        description: Total Delay Average since SRM started
    type: object
  cluster.ServerMonitor:
    properties:
      HaveBinlogSlaveUpdates:
        type: boolean
      HaveHealthyReplica:
        type: boolean
      HaveSshError:
        type: boolean
      agent:
        description: used to provision service in orchestrator
        type: string
      binaryLogDir:
        type: string
      binaryLogFile:
        type: string
      binaryLogFileOldest:
        type: string
      binaryLogFilePrevious:
        type: string
      binaryLogFiles:
        $ref: '#/definitions/dbhelper.BinaryLogMetaMap'
      binaryLogFilesCount:
        type: integer
      binaryLogOldestTimestamp:
        type: integer
      binaryLogPos:
        type: string
      binaryLogPurgeBefore:
        type: integer
      binlogDumpThreads:
        type: integer
      currentGtid:
        items:
          $ref: '#/definitions/gtid.Gtid'
        type: array
      datadir:
        type: string
      dbVersion:
        $ref: '#/definitions/version.Version'
      dbdataDir:
        type: string
      delayStat:
        $ref: '#/definitions/cluster.ServerDelayStat'
      domain:
        description: Use to store orchestrator CNI domain .<cluster_name>.svc.<cluster_name>
        type: string
      domainId:
        type: integer
      engineInnodb:
        $ref: '#/definitions/config.StringsMap'
      errorLog:
        $ref: '#/definitions/s18log.HttpLog'
      eventScheduler:
        type: boolean
      eventStatus:
        items:
          $ref: '#/definitions/dbhelper.Event'
        type: array
      failCount:
        type: integer
      failSuspectHeartbeat:
        type: integer
      failoverIoGtid:
        items:
          $ref: '#/definitions/gtid.Gtid'
        type: array
      failoverMasterLogFile:
        type: string
      failoverMasterLogPos:
        type: string
      failoverSemiSyncSlaveStatus:
        type: boolean
      gtidBinlogPos:
        items:
          $ref: '#/definitions/gtid.Gtid'
        type: array
      gtidExecuted:
        type: string
      hashUUID:
        type: integer
      haveBinLogSync:
        type: boolean
      haveBinlog:
        type: boolean
      haveBinlogAnnotate:
        type: boolean
      haveBinlogCompress:
        type: boolean
      haveBinlogMixed:
        type: boolean
      haveBinlogRow:
        type: boolean
      haveBinlogSlowqueries:
        type: boolean
      haveBinlogStatement:
        type: boolean
      haveDiskMonitor:
        type: boolean
      haveGtidStrictMode:
        type: boolean
      haveInnodbChecksum:
        type: boolean
      haveInnodbTrxCommit:
        type: boolean
      haveLogGeneral:
        type: boolean
      haveMariadbGtid:
        type: boolean
      haveMetaDataLocksLog:
        type: boolean
      haveMysqlGtid:
        type: boolean
      haveNoMasterOnStart:
        type: boolean
      havePFS:
        type: boolean
      havePFSSlowQueryLog:
        type: boolean
      haveQueryResponseTimeLog:
        type: boolean
      haveReadOnly:
        type: boolean
      haveSQLErrorLog:
        type: boolean
      haveSemiSync:
        type: boolean
      haveSlaveAggressive:
        type: boolean
      haveSlaveConservative:
        type: boolean
      haveSlaveIdempotent:
        type: boolean
      haveSlaveMinimal:
        type: boolean
      haveSlaveOptimistic:
        type: boolean
      haveSlaveSerialized:
        type: boolean
      haveSlowQueryLog:
        type: boolean
      haveWsrep:
        type: boolean
      host:
        type: string
      id:
        description: Unique name given by cluster & crc64(URL) used by test to provision
        type: string
      ignored:
        type: boolean
      ignoredRO:
        type: boolean
      inCaptureMode:
        type: boolean
      inPurgingBinaryLog:
        type: boolean
      ioGtid:
        items:
          $ref: '#/definitions/gtid.Gtid'
        type: array
      ip:
        type: string
      isBackingUpBinaryLog:
        type: boolean
      isCompute:
        description: Used to idenfied spider compute nide
        type: boolean
      isConfigGen:
        type: boolean
      isDelayed:
        type: boolean
      isFull:
        type: boolean
      isGroupReplicationMaster:
        type: boolean
      isGroupReplicationSlave:
        type: boolean
      isInPFSQueryCapture:
        type: boolean
      isInSlowQueryCapture:
        type: boolean
      isLoadingJobList:
        type: boolean
      isMaintenance:
        type: boolean
      isMaxscale:
        type: boolean
      isRefreshingBinlog:
        type: boolean
      isRefreshingBinlogMeta:
        type: boolean
      isRelay:
        type: boolean
      isReseeding:
        type: string
      isSlave:
        type: boolean
      isVirtualMaster:
        type: boolean
      isWsrepDonor:
        type: boolean
      isWsrepPrimary:
        type: boolean
      isWsrepSync:
        type: boolean
      jobResults:
        $ref: '#/definitions/config.TasksMap'
      lastBackupMeta:
        $ref: '#/definitions/cluster.ServerBackupMeta'
      lastSeenReplications:
        items:
          $ref: '#/definitions/dbhelper.SlaveStatus'
        type: array
      logOutput:
        type: string
      longQueryTime:
        type: string
      longQueryTimeSaved:
        type: string
      masterStatus:
        $ref: '#/definitions/dbhelper.MasterStatus'
      maxSlowQueryTimestamp:
        type: integer
      maxscaleHaveGtid:
        type: boolean
      maxscaleServerName:
        description: Unique server Name in maxscale conf
        type: string
      maxscaleServerStatus:
        type: string
      maxscaleVersion:
        type: integer
      name:
        type: string
      needRefreshJobs:
        type: boolean
      pointInTimeMeta:
        $ref: '#/definitions/config.PointInTimeMeta'
      port:
        type: string
      postgressDB:
        type: string
      prefered:
        type: boolean
      preferedBackup:
        type: boolean
      prevState:
        type: string
      process:
        $ref: '#/definitions/os.Process'
      proxysqlHostgroup:
        type: string
      qps:
        type: integer
      readOnly:
        type: string
      relayLogSize:
        type: integer
      replicationHealth:
        type: string
      replicationSourceName:
        type: string
      replicationTags:
        type: string
      replications:
        items:
          $ref: '#/definitions/dbhelper.SlaveStatus'
        type: array
      semiSyncMasterStatus:
        type: boolean
      semiSyncSlaveStatus:
        type: boolean
      serverId:
        type: integer
      serviceName:
        type: string
      slaposDatadir:
        type: string
      slaveGtid:
        items:
          $ref: '#/definitions/gtid.Gtid'
        type: array
      slaveVariables:
        $ref: '#/definitions/cluster.SlaveVariables'
      slowQueryCapture:
        type: boolean
      slowQueryLog:
        type: string
      sourceClusterName:
        description: Used to idenfied server added from other clusters linked with
          multi source
        type: string
      sstPort:
        description: used to send data to dbjobs
        type: string
      state:
        type: string
      strict:
        type: string
      tlsConfigUsed:
        description: used to track TLS config during key rotation
        type: string
      tunnelPort:
        type: string
      url:
        type: string
      user:
        type: string
      workLoad:
        $ref: '#/definitions/config.WorkLoadsMap'
    type: object
  cluster.SlaveVariables:
    properties:
      slaveParallelMaxQueued:
        type: integer
      slaveParallelMode:
        type: string
      slaveParallelThreads:
        type: integer
      slaveParallelWorkers:
        type: integer
      slaveTypeConversions:
        type: string
    type: object
  cluster.SlavesOldestMasterFile:
    properties:
      oldestTimestamp:
        type: string
      prefix:
        type: string
      suffix:
        type: integer
    type: object
  cluster.Test:
    properties:
      config-file:
        type: string
      config-init:
        $ref: '#/definitions/github_com_signal18_replication-manager_config.Config'
      config-test:
        $ref: '#/definitions/github_com_signal18_replication-manager_config.Config'
      name:
        type: string
      result:
        type: string
    type: object
  cluster.UserForm:
    properties:
      grants:
        type: string
      password:
        type: string
      roles:
        type: string
      username:
        type: string
    type: object
  cluster.VariableDiff:
    properties:
      diffValues:
        items:
          $ref: '#/definitions/cluster.Diff'
        type: array
      variableName:
        type: string
    type: object
  config.BackupMetaMap:
    type: object
  config.BackupMetadata:
    properties:
      backupMethod:
        type: integer
      backupStrategy:
        type: integer
      backupTool:
        type: string
      binLogFileName:
        type: string
      binLogFilePos:
        type: integer
      binLogUuid:
        type: string
      checksum:
        type: string
      completed:
        type: boolean
      compressed:
        type: boolean
      dest:
        type: string
      encrypted:
        type: boolean
      encryptionAlgo:
        type: string
      encryptionKey:
        type: string
      endTime:
        type: string
      id:
        type: integer
      previous:
        type: integer
      retentionDays:
        type: integer
      size:
        type: integer
      source:
        type: string
      startTime:
        type: string
    type: object
  config.ConfigVariableType:
    properties:
      available:
        type: boolean
      id:
        type: integer
      label:
        type: string
      name:
        type: string
    type: object
  config.DockerRepo:
    properties:
      image:
        type: string
      name:
        type: string
      tags:
        $ref: '#/definitions/config.DockerTag'
    type: object
  config.DockerTag:
    properties:
      results:
        items:
          $ref: '#/definitions/config.TagResult'
        type: array
    type: object
  config.Grant:
    properties:
      enable:
        type: boolean
      grant:
        type: string
    type: object
  config.Partner:
    properties:
      dbopsEmail:
        type: string
      domains:
        type: string
      id:
        type: integer
      isDbops:
        type: integer
      isSysops:
        type: integer
      name:
        type: string
      stars:
        type: integer
      sysopsEmail:
        type: string
    type: object
  config.PeerCluster:
    properties:
      api-credentials-acl-allow:
        type: string
      api-credentials-acl-allow-external:
        type: string
      api-public-url:
        type: string
      cloud18-cost-currency:
        type: string
      cloud18-database-read-srv-record:
        type: string
      cloud18-database-read-write-split-srv-record:
        type: string
      cloud18-database-read-write-srv-record:
        type: string
      cloud18-domain:
        type: string
      cloud18-external-dbops:
        type: string
      cloud18-external-sysops:
        type: string
      cloud18-infra-certifications:
        type: string
      cloud18-infra-cpu-freq:
        type: string
      cloud18-infra-cpu-model:
        type: string
      cloud18-infra-data-centers:
        type: string
      cloud18-infra-geo-localizations:
        type: string
      cloud18-infra-public-bandwidth:
        example: "0"
        type: string
      cloud18-monthly-dbops-cost:
        example: "0"
        type: string
      cloud18-monthly-infra-cost:
        example: "0"
        type: string
      cloud18-monthly-license-cost:
        example: "0"
        type: string
      cloud18-monthly-sysops-cost:
        example: "0"
        type: string
      cloud18-open-dbops:
        example: "false"
        type: string
      cloud18-open-sysops:
        example: "false"
        type: string
      cloud18-peer:
        example: "false"
        type: string
      cloud18-platform-description:
        type: string
      cloud18-promotion-pct:
        example: "0"
        type: string
      cloud18-shared:
        example: "false"
        type: string
      cloud18-sla-provision-time:
        example: "0"
        type: string
      cloud18-sla-repair-time:
        example: "0"
        type: string
      cloud18-sla-response-time:
        example: "0"
        type: string
      cloud18-sub-domain:
        type: string
      cloud18-sub-domain-zone:
        type: string
      cloud18-subscribed-dbops:
        example: "false"
        type: string
      cluster-name:
        type: string
      peer-users:
        items:
          type: string
        type: array
      prov-db-cpu-cores:
        example: "0"
        type: string
      prov-db-disk-iops:
        example: "0"
        type: string
      prov-db-disk-size:
        example: "0"
        type: string
      prov-db-memory:
        example: "0"
        type: string
      prov-orchestrator:
        type: string
      prov-service-plan:
        type: string
    type: object
  config.PointInTimeMeta:
    properties:
      backup:
        type: integer
      isInPITR:
        type: boolean
      restoreTime:
        type: integer
      useBinlog:
        type: boolean
    type: object
  config.Role:
    properties:
      enable:
        type: boolean
      role:
        type: string
    type: object
  config.ServicePlan:
    properties:
      bp:
        example: "0"
        type: string
      certs:
        type: string
      cpu:
        type: string
      dbacost:
        example: "0"
        type: string
      dbcores:
        example: "0"
        type: string
      dbcpufreq:
        type: string
      dbdatasize:
        example: "0"
        type: string
      dbiops:
        example: "0"
        type: string
      dbmemory:
        example: "0"
        type: string
      dbsystemsize:
        example: "0"
        type: string
      dc:
        type: string
      devise:
        type: string
      extdbops:
        type: string
      extsysops:
        type: string
      gti:
        example: "0"
        type: string
      gtr:
        example: "0"
        type: string
      id:
        example: "0"
        type: string
      infra:
        type: string
      infracost:
        example: "0"
        type: string
      licencecost:
        example: "0"
        type: string
      plan:
        type: string
      promo:
        example: "0"
        type: string
      provtime:
        example: "0"
        type: string
      prxcores:
        example: "0"
        type: string
      prxdatasize:
        example: "0"
        type: string
      syscost:
        example: "0"
        type: string
      zone:
        type: string
    type: object
  config.StringsMap:
    type: object
  config.TagResult:
    properties:
      name:
        type: string
    type: object
  config.Tarball:
    properties:
      OS:
        type: string
      checksum:
        type: string
      date_added:
        type: string
      flavor:
        type: string
      minimal:
        type: boolean
      name:
        type: string
      notes:
        type: string
      short_version:
        type: string
      size:
        type: integer
      updated_by:
        type: string
      url:
        type: string
      version:
        type: string
    type: object
  config.TasksMap:
    type: object
  config.VersionsMap:
    type: object
  config.WorkLoad:
    properties:
      busyTime:
        type: string
      connections:
        type: integer
      cpuThreadPool:
        type: number
      cpuUserStats:
        type: number
      dbIndexSize:
        type: integer
      dbTableSize:
        type: integer
      qps:
        type: integer
    type: object
  config.WorkLoadsMap:
    type: object
  configurator.Configurator:
    properties:
      configPrxTags:
        description: from module
        items:
          $ref: '#/definitions/repmanv3.Tag'
        type: array
      configTags:
        description: from module
        items:
          $ref: '#/definitions/repmanv3.Tag'
        type: array
      dbServersTags:
        description: from conf
        items:
          type: string
        type: array
      dbServersTagsDiscover:
        description: from conf
        items:
          type: string
        type: array
      proxyServersTags:
        items:
          type: string
        type: array
      proxyServersTagsDiscover:
        items:
          type: string
        type: array
    type: object
  dbhelper.BinaryLogMetaMap:
    type: object
  dbhelper.Event:
    properties:
      db:
        type: string
      definer:
        type: string
      name:
        type: string
      status:
        type: integer
    type: object
  dbhelper.MasterStatus:
    properties:
      binlogDoDB:
        type: string
      binlogIgnoreDB:
        type: string
      file:
        type: string
      position:
        type: integer
    type: object
  dbhelper.SlaveStatus:
    properties:
      channelName:
        $ref: '#/definitions/sql.NullString'
      connectionName:
        $ref: '#/definitions/sql.NullString'
      eeplicateDoDomainIds:
        $ref: '#/definitions/sql.NullString'
      execMasterLogPos:
        $ref: '#/definitions/sql.NullString'
      executedGtidSet:
        $ref: '#/definitions/sql.NullString'
      gtidIoPos:
        $ref: '#/definitions/sql.NullString'
      gtidSlavePos:
        $ref: '#/definitions/sql.NullString'
      lastIoErrno:
        $ref: '#/definitions/sql.NullString'
      lastIoError:
        $ref: '#/definitions/sql.NullString'
      lastSqlErrno:
        $ref: '#/definitions/sql.NullString'
      lastSqlError:
        $ref: '#/definitions/sql.NullString'
      masterHost:
        $ref: '#/definitions/sql.NullString'
      masterLogFile:
        $ref: '#/definitions/sql.NullString'
      masterPort:
        $ref: '#/definitions/sql.NullString'
      masterServerId:
        type: integer
      masterUser:
        $ref: '#/definitions/sql.NullString'
      postgresExternalId:
        $ref: '#/definitions/sql.NullString'
      readMasterLogPos:
        $ref: '#/definitions/sql.NullString'
      relayMasterLogFile:
        $ref: '#/definitions/sql.NullString'
      replicateDoDb:
        $ref: '#/definitions/sql.NullString'
      replicateDoTable:
        $ref: '#/definitions/sql.NullString'
      replicateIgnoreDb:
        $ref: '#/definitions/sql.NullString'
      replicateIgnoreDomainIds:
        $ref: '#/definitions/sql.NullString'
      replicateIgnoreServerIds:
        $ref: '#/definitions/sql.NullString'
      replicateIgnoreTable:
        $ref: '#/definitions/sql.NullString'
      replicateWildDoTable:
        $ref: '#/definitions/sql.NullString'
      replicateWildIgnoreTable:
        $ref: '#/definitions/sql.NullString'
      retrievedGtidSet:
        $ref: '#/definitions/sql.NullString'
      secondsBehindMaster:
        $ref: '#/definitions/sql.NullInt64'
      slaveHeartbeatPeriod:
        type: number
      slaveIoRunning:
        $ref: '#/definitions/sql.NullString'
      slaveSQLRunningState:
        $ref: '#/definitions/sql.NullString'
      slaveSqlRunning:
        $ref: '#/definitions/sql.NullString'
      usingGtid:
        $ref: '#/definitions/sql.NullString'
    type: object
  github_com_signal18_replication-manager_config.Config:
    properties:
      alertPushoverAppToken:
        type: string
      alertPushoverUserToken:
        type: string
      alertScript:
        type: string
      alertSlackChannel:
        type: string
      alertSlackUrl:
        type: string
      alertSlackUser:
        type: string
      alertTeamsProxyUrl:
        type: string
      alertTeamsState:
        type: string
      alertTeamsUrl:
        type: string
      analyzeUseSql:
        type: boolean
      apiBind:
        type: string
      apiCredentials:
        type: string
      apiCredentialsACLAllow:
        type: string
      apiCredentialsACLAllowExternal:
        type: string
      apiCredentialsACLDiscard:
        type: string
      apiCredentialsACLDiscardExternal:
        type: string
      apiCredentialsExternal:
        type: string
      apiCredentialsSecureConfig:
        type: boolean
      apiHttpsBind:
        type: boolean
      apiOAuthClientID:
        type: string
      apiOAuthClientSecret:
        type: string
      apiOAuthProvider:
        type: string
      apiPort:
        type: string
      apiPublicUrl:
        type: string
      apiServer:
        type: boolean
      apiSwaggerEnabled:
        type: boolean
      apiTokenTimeout:
        type: integer
      arbitrationExternal:
        type: boolean
      arbitrationExternalHosts:
        type: string
      arbitrationExternalSecret:
        type: string
      arbitrationExternalUniqueId:
        type: integer
      arbitrationFailedMasterScript:
        type: string
      arbitrationPeerHosts:
        type: string
      arbitrationReadTimout:
        type: integer
      arbitratorBindAddress:
        type: string
      arbitratorDriver:
        type: string
      autorejoin:
        type: boolean
      autorejoinBackupBinlog:
        type: boolean
      autorejoinFlashback:
        type: boolean
      autorejoinFlashbackOnSync:
        type: boolean
      autorejoinFlashbackOnUnsync:
        type: boolean
      autorejoinForceRestore:
        type: boolean
      autorejoinLogicalBackup:
        type: boolean
      autorejoinMysqldump:
        type: boolean
      autorejoinPhysicalBackup:
        type: boolean
      autorejoinScript:
        type: string
      autorejoinSlavePositionalHeartbeat:
        type: boolean
      autorejoinZfsFlashback:
        type: boolean
      autoseed:
        type: boolean
      backup:
        type: boolean
      backupBinlogs:
        type: boolean
      backupBinlogsKeep:
        type: integer
      backupKeepDaily:
        type: integer
      backupKeepHourly:
        type: integer
      backupKeepMonthly:
        type: integer
      backupKeepUntilValid:
        type: boolean
      backupKeepWeekly:
        type: integer
      backupKeepYearly:
        type: integer
      backupLoadScript:
        type: string
      backupLockDDL:
        type: boolean
      backupLogicalDumpSystemTables:
        type: boolean
      backupLogicalDumpThreads:
        type: integer
      backupLogicalLoadThreads:
        type: integer
      backupLogicalType:
        type: string
      backupMyDumperOptions:
        type: string
      backupMyDumperRegex:
        type: string
      backupMyLoaderOptions:
        type: string
      backupMydumperPath:
        type: string
      backupMyloaderPath:
        type: string
      backupMysqlbinlogPath:
        type: string
      backupMysqlclientgPath:
        type: string
      backupMysqldumpOptions:
        type: string
      backupMysqldumpPath:
        type: string
      backupPhysicalType:
        type: string
      backupRestic:
        type: boolean
      backupResticAws:
        type: boolean
      backupResticAwsAccessKeyId:
        type: string
      backupResticBinaryPath:
        type: string
      backupResticRepository:
        type: string
      backupSaveScript:
        type: string
      backupStreaming:
        type: boolean
      backupStreamingBucket:
        type: string
      backupStreamingDebug:
        type: boolean
      backupStreamingEndpoint:
        type: string
      backupStreamingRegion:
        type: string
      binlogCopyMode:
        type: string
      binlogCopyScript:
        type: string
      binlogParseMode:
        type: string
      binlogRotationScript:
        type: string
      checkBinlogFilters:
        type: boolean
      checkBinlogServerId:
        type: integer
      checkGrants:
        type: boolean
      checkReplicationErrantTrx:
        type: boolean
      checkReplicationFilters:
        type: boolean
      checkReplicationState:
        type: boolean
      checkType:
        type: string
      cloud18:
        type: boolean
      cloud18CostCurrency:
        type: string
      cloud18DatabaseReadSrvRecord:
        type: string
      cloud18DatabaseReadWriteSplitSrvRecord:
        type: string
      cloud18DatabaseReadWriteSrvRecord:
        type: string
      cloud18DbOps:
        type: string
      cloud18DbaUserCredential:
        type: string
      cloud18Domain:
        type: string
      cloud18ExternalDbOps:
        type: string
      cloud18ExternalSysOps:
        type: string
      cloud18GitUser:
        type: string
      cloud18InfraCertifications:
        type: string
      cloud18InfraCpuFreq:
        type: string
      cloud18InfraCpuModel:
        type: string
      cloud18InfraDataCenters:
        type: string
      cloud18InfraDescription:
        type: string
      cloud18InfraGeoLocalizations:
        type: string
      cloud18InfraPublicBandwidth:
        type: number
      cloud18MonthlyDbopsCost:
        type: number
      cloud18MonthlyInfraCost:
        type: number
      cloud18MonthlyLicenseCost:
        type: number
      cloud18MonthlySysopsCost:
        type: number
      cloud18OpenDbops:
        type: boolean
      cloud18OpenSysops:
        type: boolean
      cloud18PlatformDescription:
        type: string
      cloud18PromotionPct:
        type: number
      cloud18SalesSubscriptionScript:
        type: string
      cloud18SalesSubscriptionValidateScript:
        type: string
      cloud18SalesUnsubscribeScript:
        type: string
      cloud18Shared:
        type: boolean
      cloud18SlaProvisionTime:
        type: number
      cloud18SlaRepairTime:
        type: number
      cloud18SlaResponseTime:
        type: number
      cloud18SponsorUserCredential:
        type: string
      cloud18SubDomain:
        type: string
      cloud18SubDomainZone:
        type: string
      cloud18SubscribedDbops:
        type: boolean
      clusterHead:
        type: string
      compressBackups:
        type: boolean
      dbServersBackupHosts:
        type: string
      dbServersConnectTimeout:
        type: integer
      dbServersCredential:
        type: string
      dbServersHosts:
        type: string
      dbServersIgnoredHosts:
        type: string
      dbServersIgnoredReadonly:
        type: string
      dbServersLocality:
        type: string
      dbServersPreferedMaster:
        type: string
      dbServersReadTimeout:
        type: integer
      dbServersStateChangeScript:
        type: string
      dbServersTlsCaCert:
        type: string
      dbServersTlsClientCert:
        type: string
      dbServersTlsClientKey:
        type: string
      dbServersTlsServerCert:
        type: string
      dbServersTlsServerKey:
        type: string
      dbServersUseGeneratedCert:
        type: boolean
      delayStatCapture:
        type: boolean
      delayStatRotate:
        type: integer
      eeplicationRestartOnSqlLErrorMatch:
        type: string
      enterprise:
        description: used to talk to opensvc collector
        type: boolean
      extproxy:
        type: boolean
      extproxyAddress:
        type: string
      failoverAtSync:
        type: boolean
      failoverCheckDelayStat:
        type: boolean
      failoverEventScheduler:
        type: boolean
      failoverEventStatus:
        type: boolean
      failoverFalsePositiveExternal:
        type: boolean
      failoverFalsePositiveExternalPort:
        type: integer
      failoverFalsePositiveHeartbeat:
        type: boolean
      failoverFalsePositiveHeartbeatTimeout:
        type: integer
      failoverFalsePositiveMaxscale:
        type: boolean
      failoverFalsePositiveMaxscaleTimeout:
        type: integer
      failoverFalsePositivePingCounter:
        type: integer
      failoverLimit:
        type: integer
      failoverLogFileKeep:
        type: integer
      failoverMaxSlaveDelay:
        type: integer
      failoverMdevCheck:
        type: boolean
      failoverMdevLevel:
        type: string
      failoverMode:
        type: string
      failoverPostScript:
        type: string
      failoverPreScript:
        type: string
      failoverReadOnlyState:
        type: boolean
      failoverResetTime:
        type: integer
      failoverRestartUnsafe:
        type: boolean
      failoverSemisyncState:
        type: boolean
      failoverSuperReadOnlyState:
        type: boolean
      failoverSwithToPrefered:
        type: boolean
      failoverTimeLimit:
        type: integer
      forceBinlogAnnotate:
        type: boolean
      forceBinlogChecksum:
        type: boolean
      forceBinlogCompress:
        type: boolean
      forceBinlogPurge:
        type: boolean
      forceBinlogPurgeMinReplica:
        type: integer
      forceBinlogPurgeOnRestore:
        type: boolean
      forceBinlogPurgeReplicas:
        type: boolean
      forceBinlogPurgeTotalSize:
        type: integer
      forceBinlogRow:
        type: boolean
      forceBinlogSlowqueries:
        type: boolean
      forceDiskRelaylogSizeLimit:
        type: boolean
      forceDiskRelaylogSizeLimitSize:
        type: integer
      forceInmemoryBinlogCacheSize:
        type: boolean
      forceNoslaveBehind:
        type: boolean
      forceSlaveGtidMode:
        type: boolean
      forceSlaveGtidModeStrict:
        type: boolean
      forceSlaveHeartbeat:
        type: boolean
      forceSlaveHeartbeatRetry:
        type: integer
      forceSlaveHeartbeatTime:
        type: integer
      forceSlaveIdempotent:
        type: boolean
      forceSlaveNoGtidMode:
        type: boolean
      forceSlaveParallelMode:
        type: string
      forceSlaveReadonly:
        type: boolean
      forceSlaveSemisync:
        type: boolean
      forceSlaveStrict:
        type: boolean
      forceSyncBinlog:
        type: boolean
      forceSyncInnodb:
        type: boolean
      fullVersion:
        type: string
      gitMonitoringTicker:
        type: integer
      gitUrl:
        type: string
      gitUrlPull:
        type: string
      gitUsername:
        type: string
      goArch:
        type: string
      goOS:
        type: string
      graphiteBlacklist:
        type: boolean
      graphiteCarbonApiPort:
        type: integer
      graphiteCarbonHost:
        type: string
      graphiteCarbonLinkPort:
        type: integer
      graphiteCarbonPicklePort:
        type: integer
      graphiteCarbonPort:
        type: integer
      graphiteCarbonPprofPort:
        type: integer
      graphiteCarbonServerPort:
        type: integer
      graphiteEmbedded:
        type: boolean
      graphiteMetrics:
        type: boolean
      graphiteWhitelist:
        type: boolean
      graphiteWhitelistTemplate:
        type: string
      haproxy:
        type: boolean
      haproxyAPIPort:
        type: integer
      haproxyAPIReadBackend:
        type: string
      haproxyAPIWriteBackend:
        type: string
      haproxyBinaryPath:
        type: string
      haproxyDebug:
        type: boolean
      haproxyIpReadBind:
        type: string
      haproxyIpWriteBind:
        type: string
      haproxyJanitorWeights:
        type: string
      haproxyLogLevel:
        type: integer
      haproxyMode:
        type: string
      haproxyPassword:
        type: string
      haproxyReadPort:
        type: integer
      haproxyServers:
        type: string
      haproxyServers-ipv6:
        type: string
      haproxyStatPort:
        type: integer
      haproxyWritePort:
        type: integer
      haproxylUser:
        type: string
      heartbeatTable:
        type: boolean
      http-use-react:
        type: boolean
      httpAuth:
        type: boolean
      httpBindAdress:
        type: string
      httpBootstrapButton:
        type: boolean
      httpPort:
        type: string
      httpRefreshInterval:
        type: integer
      httpRoot:
        type: string
      httpServer:
        type: boolean
      httpSessionLifetime:
        type: integer
      interactive:
        type: boolean
      jobLogBatchSize:
        type: integer
      kubeConfig:
        type: string
      logBackupStream:
        type: boolean
      logBackupStreamLevel:
        type: integer
      logBinlogPurge:
        type: boolean
      logBinlogPurgeLevel:
        type: integer
      logConfigLoad:
        type: boolean
      logConfigLoadLevel:
        type: integer
      logFile:
        type: string
      logFileLevel:
        type: integer
      logGit:
        type: boolean
      logGitLevel:
        type: integer
      logGraphite:
        type: boolean
      logGraphiteLevel:
        type: integer
      logHeartbeat:
        type: boolean
      logHeartbeatLevel:
        type: integer
      logLevel:
        type: integer
      logOrchestrator:
        type: boolean
      logOrchestratorLevel:
        type: integer
      logProxy:
        type: boolean
      logProxyLevel:
        type: integer
      logRotateMaxAge:
        type: integer
      logRotateMaxBackup:
        type: integer
      logRotateMaxSize:
        type: integer
      logSqlInMonitoring:
        type: boolean
      logSst:
        description: internal replication-manager sst
        type: boolean
      logSstLevel:
        description: internal replication-manager sst
        type: integer
      logSyslog:
        type: boolean
      logTask:
        type: boolean
      logTaskLevel:
        type: integer
      logTopology:
        type: boolean
      logTopologyLevel:
        type: integer
      logVault:
        type: boolean
      logVaultLevel:
        type: integer
      logWriterElection:
        type: boolean
      logWriterElectionLevel:
        type: integer
      mailFrom:
        type: string
      mailSmtpAddr:
        type: string
      mailSmtpPassword:
        type: string
      mailSmtpTlsSkipVerify:
        type: boolean
      mailSmtpUser:
        type: string
      mailTo:
        type: string
      maxscale:
        type: boolean
      maxscaleBinlog:
        type: boolean
      maxscaleBinlogPort:
        type: integer
      maxscaleDebug:
        type: boolean
      maxscaleDisableMonitor:
        type: boolean
      maxscaleGetInfoMethod:
        type: string
      maxscaleJanitorWeights:
        type: string
      maxscaleLogLevel:
        type: integer
      maxscaleMaxinfoPort:
        type: integer
      maxscalePass:
        type: string
      maxscalePort:
        type: string
      maxscaleReadPort:
        type: integer
      maxscaleReadWritePort:
        type: integer
      maxscaleServerMatchPort:
        type: boolean
      maxscaleServers:
        type: string
      maxscaleServers-ipv6:
        type: string
      maxscaleUser:
        type: string
      maxscaleWritePort:
        type: integer
      maxscalemBinaryPath:
        type: string
      monitoringAddress:
        type: string
      monitoringAlertTrigger:
        type: string
      monitoringBasedir:
        type: string
      monitoringCapture:
        type: boolean
      monitoringCaptureFileKeep:
        type: integer
      monitoringCaptureTrigger:
        type: string
      monitoringCheckGrants:
        type: boolean
      monitoringCloseStateScript:
        type: string
      monitoringConfdir:
        type: string
      monitoringConfdirBackup:
        type: string
      monitoringConfdirExtra:
        type: string
      monitoringDatadir:
        type: string
      monitoringDiskUsage:
        type: boolean
      monitoringDiskUsagePct:
        type: integer
      monitoringErreurLogLength:
        type: integer
      monitoringIgnoreErrors:
        type: string
      monitoringInnoDBStatus:
        type: boolean
      monitoringKeyPath:
        type: string
      monitoringKeyPathGitOverwrite:
        type: boolean
      monitoringLongQueryLogLength:
        type: integer
      monitoringLongQueryScript:
        type: string
      monitoringLongQueryTime:
        type: integer
      monitoringLongQueryWithProcess:
        type: boolean
      monitoringLongQueryWithTable:
        type: boolean
      monitoringMergeConfigOnStart:
        type: boolean
      monitoringOpenStateScript:
        type: string
      monitoringPause:
        type: boolean
      monitoringPerformanceSchema:
        type: boolean
      monitoringPlugins:
        type: boolean
      monitoringProcesslist:
        type: boolean
      monitoringQueries:
        type: boolean
      monitoringQueryRules:
        type: boolean
      monitoringQueryTimeout:
        type: integer
      monitoringRestoreConfigOnStart:
        type: boolean
      monitoringSSLCert:
        type: string
      monitoringSSLKey:
        type: string
      monitoringSaveConfig:
        type: boolean
      monitoringScheduler:
        type: boolean
      monitoringSchemaChange:
        type: boolean
      monitoringSchemaChangeScript:
        type: string
      monitoringSharedir:
        type: string
      monitoringSocket:
        type: string
      monitoringTenant:
        type: string
      monitoringTicker:
        type: integer
      monitoringTunnelCredential:
        type: string
      monitoringTunnelHost:
        type: string
      monitoringTunnelKeyPath:
        type: string
      monitoringVariableDiff:
        type: boolean
      monitoringWaitRetry:
        type: integer
      monitoringWriteHeartbeat:
        type: boolean
      monitoringWriteHeartbeatCredential:
        type: string
      myproxy:
        type: boolean
      myproxyDebug:
        type: boolean
      myproxyLogLevel:
        type: integer
      myproxyPassword:
        type: string
      myproxyPort:
        type: integer
      myproxyUser:
        type: string
      mysqlrouter:
        type: boolean
      mysqlrouterDebug:
        type: boolean
      mysqlrouterJanitorWeights:
        type: string
      mysqlrouterLogLevel:
        type: integer
      mysqlrouterPass:
        type: string
      mysqlrouterPort:
        type: string
      mysqlrouterReadPort:
        type: integer
      mysqlrouterReadWritePort:
        type: integer
      mysqlrouterServers:
        type: string
      mysqlrouterUser:
        type: string
      mysqlrouterWritePort:
        type: integer
      onpremiseSsh:
        type: boolean
      onpremiseSshCredential:
        type: string
      onpremiseSshDbJobScript:
        type: string
      onpremiseSshPort:
        type: integer
      onpremiseSshPrivateKey:
        type: string
      onpremiseSshStartDbScript:
        type: string
      onpremiseSshStartProxyScript:
        type: string
      onpremiseSshStopProxyScript:
        type: string
      opensvcAdminUser:
        type: string
      opensvcCodeapp:
        type: string
      opensvcCollectorAccount:
        type: string
      opensvcHost:
        type: string
      opensvcP12Certificate:
        type: string
      opensvcP12Secret:
        type: string
      opensvcRegister:
        type: boolean
      opensvcUseCollectorApi:
        type: boolean
      opensvcUser:
        type: string
      optimizeUseSql:
        type: boolean
      printDelayStat:
        type: boolean
      printDelayStatHistory:
        type: boolean
      printDelayStatInterval:
        type: integer
      provDBApplyDynamicConfig:
        type: boolean
      provDBCompliance:
        type: string
      provDBForceWriteConfig:
        type: boolean
      provDbAgents:
        type: string
      provDbBinaryBasedir:
        type: string
      provDbBinaryInTarball:
        type: boolean
      provDbBinaryTarballName:
        type: string
      provDbBootstrapScript:
        type: string
      provDbCleanupScript:
        type: string
      provDbClientBasedir:
        type: string
      provDbCpuCores:
        type: string
      provDbDatadirVersion:
        type: string
      provDbDiskDevice:
        type: string
      provDbDiskDockerSize:
        type: string
      provDbDiskFs:
        type: string
      provDbDiskFsCompress:
        type: string
      provDbDiskIops:
        type: string
      provDbDiskIopsLatency:
        type: string
      provDbDiskPool:
        type: string
      provDbDiskSize:
        type: string
      provDbDiskSnapshotKeep:
        type: integer
      provDbDiskSnapshotPreferedMaster:
        type: boolean
      provDbDiskSystemSize:
        type: string
      provDbDiskTempSize:
        type: string
      provDbDiskType:
        type: string
      provDbDockerImg:
        type: string
      provDbDomain:
        type: string
      provDbExpireLogDays:
        type: integer
      provDbLoadCsv:
        type: string
      provDbLoadSql:
        type: string
      provDbMaxConnections:
        type: integer
      provDbMemory:
        type: string
      provDbMemorySharedPct:
        type: string
      provDbMemoryThreadedPct:
        type: string
      provDbNetGateway:
        type: string
      provDbNetIface:
        type: string
      provDbNetMask:
        type: string
      provDbServiceType:
        type: string
      provDbStartScript:
        type: string
      provDbStopScript:
        type: string
      provDbTags:
        type: string
      provDbVolumeData:
        type: string
      provDbVolumeDocker:
        type: string
      provDockerDaemonPrivate:
        type: boolean
      provNetCni:
        type: boolean
      provNetCniCluster:
        type: string
      provOrchestrator:
        type: string
      provOrchestratorCluster:
        type: string
      provOrchestratorEnable:
        type: string
      provProxyAgents:
        type: string
      provProxyAgentsFailover:
        type: string
      provProxyBootstrapScript:
        type: string
      provProxyCleanupScript:
        type: string
      provProxyCompliance:
        type: string
      provProxyCpuCores:
        type: string
      provProxyDiskDevice:
        type: string
      provProxyDiskFs:
        type: string
      provProxyDiskPool:
        type: string
      provProxyDiskSize:
        type: string
      provProxyDiskType:
        type: string
      provProxyDockerHaproxyImg:
        type: string
      provProxyDockerMaxscaleImg:
        type: string
      provProxyDockerMysqlrouterImg:
        type: string
      provProxyDockerProxysqlImg:
        type: string
      provProxyDockerShardproxyImg:
        type: string
      provProxyMemory:
        type: string
      provProxyNetGateway:
        type: string
      provProxyNetIface:
        type: string
      provProxyNetMask:
        type: string
      provProxyRouteAddr:
        type: string
      provProxyRouteMask:
        type: string
      provProxyRoutePolicy:
        type: string
      provProxyRoutePort:
        type: string
      provProxyServiceType:
        type: string
      provProxyStartScript:
        type: string
      provProxyStopScript:
        type: string
      provProxyTags:
        type: string
      provProxyVolumeData:
        type: string
      provSerialized:
        type: boolean
      provServicePlan:
        type: string
      provServicePlanRegistry:
        type: string
      provSphinxAgents:
        type: string
      provSphinxCpuCores:
        type: string
      provSphinxDiskDevice:
        type: string
      provSphinxDiskFs:
        type: string
      provSphinxDiskPool:
        type: string
      provSphinxDiskSize:
        type: string
      provSphinxDiskType:
        type: string
      provSphinxDockerImg:
        type: string
      provSphinxMaxChildrens:
        type: string
      provSphinxMemory:
        type: string
      provSphinxReindexSchedule:
        type: string
      provSphinxServiceType:
        type: string
      provSphinxTags:
        type: string
      provTlsServerCa:
        type: string
      provTlsServerCert:
        type: string
      provTlsServerKey:
        type: string
      proxyServersBackendCompression:
        type: boolean
      proxyServersBackendMaxConnections:
        type: integer
      proxyServersBackendMaxReplicationLag:
        type: integer
      proxyServersChangeStateScript:
        type: string
      proxyServersReadOnMaster:
        type: boolean
      proxyServersReadOnMasterNoSlave:
        type: boolean
      proxyjanitorAdminPort:
        type: string
      proxyjanitorBinaryPath:
        type: string
      proxyjanitorDebug:
        type: boolean
      proxyjanitorLogLevel:
        type: integer
      proxyjanitorPassword:
        type: string
      proxyjanitorPort:
        type: string
      proxyjanitorServers:
        type: string
      proxyjanitorServers-ipv6:
        type: string
      proxyjanitorUser:
        type: string
      proxysql:
        type: boolean
      proxysqlAdminPort:
        type: string
      proxysqlBinaryPath:
        type: string
      proxysqlBootstrap:
        type: boolean
      proxysqlBootstrapHostgroups:
        type: boolean
      proxysqlBootstrapQueryRules:
        type: boolean
      proxysqlBootstrapVariables:
        type: boolean
      proxysqlBootstrapyUsers:
        type: boolean
      proxysqlDebug:
        type: boolean
      proxysqlJanitorWeights:
        type: string
      proxysqlLogLevel:
        type: integer
      proxysqlMultiplexing:
        type: boolean
      proxysqlPassword:
        type: string
      proxysqlPort:
        type: string
      proxysqlReaderHostgroup:
        type: string
      proxysqlSaveToDisk:
        type: boolean
      proxysqlServers:
        type: string
      proxysqlServersIpv6:
        type: string
      proxysqlUser:
        type: string
      proxysqlWriterHostgroup:
        type: string
      registryConsul:
        type: boolean
      registryConsulCredential:
        type: string
      registryConsulDebug:
        type: boolean
      registryConsulLogLevel:
        type: integer
      registryConsulToken:
        type: string
      registryJanitorWeights:
        type: string
      registryServers:
        type: string
      replicationActivePassive:
        type: boolean
      replicationCredential:
        type: string
      replicationDelayedHosts:
        type: string
      replicationDelayedTime:
        type: integer
      replicationDynamicTopology:
        type: boolean
      replicationErrorScript:
        type: string
      replicationMasterConnectRetry:
        type: integer
      replicationMasterSlaveNeverRelay:
        type: boolean
      replicationMasterSlavePgLogical:
        type: boolean
      replicationMasterSlavePgStream:
        type: boolean
      replicationMultiMaster:
        type: boolean
      replicationMultiMasterConcurrentWrite:
        type: boolean
      replicationMultiMasterGrouprep:
        type: boolean
      replicationMultiMasterGrouprepPort:
        type: integer
      replicationMultiMasterRing:
        type: boolean
      replicationMultiMasterRingUnsafe:
        type: boolean
      replicationMultiMasterWsrep:
        type: boolean
      replicationMultiMasterWsrepPort:
        type: integer
      replicationMultiMasterWsrepSSTMethod:
        type: string
      replicationMultiTierSlave:
        type: boolean
      replicationMultisourceHeadClusters:
        type: string
      replicationSourceName:
        type: string
      replicationUseSsl:
        type: boolean
      schedulerAlertDisable:
        type: boolean
      schedulerAlertDisableCron:
        type: string
      schedulerAlertDisableTime:
        type: integer
      schedulerDatabaseLogsTableKeep:
        type: integer
      schedulerDbServersAnalyze:
        type: boolean
      schedulerDbServersAnalyzeCron:
        type: string
      schedulerDbServersLogicalBackup:
        type: boolean
      schedulerDbServersLogicalBackupCron:
        type: string
      schedulerDbServersLogs:
        type: boolean
      schedulerDbServersLogsCron:
        type: string
      schedulerDbServersLogsTableRotate:
        type: boolean
      schedulerDbServersLogsTableRotateCron:
        type: string
      schedulerDbServersOptimize:
        type: boolean
      schedulerDbServersOptimizeCron:
        type: string
      schedulerDbServersPhysicalBackup:
        type: boolean
      schedulerDbServersPhysicalBackupCron:
        type: string
      schedulerDbServersReceiverPorts:
        type: string
      schedulerDbServersReceiverUseSSL:
        type: boolean
      schedulerDbServersSenderPorts:
        type: string
      schedulerJobsSsh:
        type: boolean
      schedulerJobsSshCron:
        type: string
      schedulerRollingReprov:
        type: boolean
      schedulerRollingReprovCron:
        type: string
      schedulerRollingRestart:
        type: boolean
      schedulerRollingRestartCron:
        type: string
      schedulerSlaRotateCron:
        type: string
      shardproxy:
        type: boolean
      shardproxyCopyGrants:
        type: boolean
      shardproxyCredential:
        type: string
      shardproxyDebug:
        type: boolean
      shardproxyIgnoreTables:
        type: string
      shardproxyJanitorWeights:
        type: string
      shardproxyLoadSystem:
        type: boolean
      shardproxyLogLevel:
        type: integer
      shardproxyServers:
        type: string
      shardproxyServers-ipv6:
        type: string
      shardproxyUniversalTables:
        type: string
      slaposConfig:
        type: string
      slaposDbPartitions:
        type: string
      slaposHaproxyPartitions:
        type: string
      slaposMaxscalePartitions:
        type: string
      slaposProxysqlPartitions:
        type: string
      slaposShardproxyPartitions:
        type: string
      slaposSphinxPartitions:
        type: string
      sphinx:
        type: boolean
      sphinxConfig:
        type: string
      sphinxDebug:
        type: boolean
      sphinxJanitorWeights:
        type: string
      sphinxLogLevel:
        type: integer
      sphinxPort:
        type: string
      sphinxServers:
        type: string
      sphinxServers-ipv6:
        type: string
      sphinxSqlPort:
        type: string
      sstSendBuffer:
        type: integer
      switchoverAtEqualGtid:
        type: boolean
      switchoverAtSync:
        type: boolean
      switchoverDecreaseMaxConn:
        type: boolean
      switchoverDecreaseMaxConnValue:
        type: integer
      switchoverLowerRelease:
        type: boolean
      switchoverMaxSlaveDelay:
        type: integer
      switchoverSlaveWaitCatch:
        type: boolean
      switchoverWaitKill:
        type: integer
      switchoverWaitRouteChange:
        type: integer
      switchoverWaitTrx:
        type: integer
      switchoverWaitWriteQuery:
        type: integer
      sysbenchBinaryPath:
        type: string
      sysbenchBinaryTest:
        type: string
      sysbenchScale:
        type: integer
      sysbenchTables:
        type: integer
      sysbenchThreads:
        type: integer
      sysbenchTime:
        type: integer
      sysbenchV1:
        type: boolean
      test:
        type: boolean
      testInjectTraffic:
        type: boolean
      topologyTarget:
        type: string
      vaultAuth:
        type: string
      vaultMode:
        type: string
      vaultMount:
        type: string
      vaultRoleId:
        type: string
      vaultSecretId:
        type: string
      vaultServerAddr:
        type: string
      vaultToken:
        type: string
      verbose:
        type: boolean
      version:
        type: string
      withEmbed:
        type: string
      withTarball:
        type: string
    type: object
  gtid.Gtid:
    properties:
      domainId:
        type: integer
      seqNo:
        type: integer
      serverId:
        type: integer
    type: object
  opensvc.Addr:
    properties:
      addr:
        type: string
      addr_type:
        type: string
      intf:
        type: string
      mask:
        type: string
      net_broadcast:
        type: string
      net_gateway:
        type: string
      net_name:
        type: string
      net_network:
        type: string
    type: object
  opensvc.Host:
    properties:
      cpu_cores:
        type: integer
      cpu_freq:
        type: integer
      id:
        type: integer
      ips:
        items:
          $ref: '#/definitions/opensvc.Addr'
        type: array
      mem_bytes:
        type: integer
      node_id:
        type: string
      nodename:
        type: string
      os_kernel:
        type: string
      os_name:
        type: string
      svc:
        items:
          $ref: '#/definitions/opensvc.Service'
        type: array
    type: object
  opensvc.Service:
    properties:
      id:
        type: integer
      svc_id:
        type: string
      svc_status:
        type: string
      svcname:
        type: string
      updated:
        type: string
    type: object
  os.Process:
    properties:
      pid:
        type: integer
    type: object
  regexp.Regexp:
    type: object
  repmanv3.BackupStat:
    properties:
      total_blob_count:
        type: integer
      total_file_count:
        type: integer
      total_size:
        type: integer
    type: object
  repmanv3.Tag:
    properties:
      category:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  s18log.HttpLog:
    properties:
      buffer:
        items:
          $ref: '#/definitions/s18log.HttpMessage'
        type: array
      len:
        type: integer
      line:
        type: integer
    type: object
  s18log.HttpMessage:
    properties:
      group:
        type: string
      level:
        type: string
      text:
        type: string
      timestamp:
        type: string
    type: object
  server.ApiResponse:
    properties:
      data:
        type: string
      success:
        type: boolean
    type: object
  server.CredentialMailForm:
    properties:
      type:
        type: string
      username:
        type: string
    type: object
  server.DecodedData:
    properties:
      data:
        type: string
    type: object
  server.Heartbeat:
    properties:
      cluster:
        type: string
      failed:
        type: integer
      hosts:
        type: integer
      id:
        type: integer
      master:
        type: string
      secret:
        type: string
      status:
        type: string
      uuid:
        type: string
    type: object
  server.ReplicationManager:
    properties:
      agents:
        items:
          $ref: '#/definitions/opensvc.Host'
        type: array
      arch:
        type: string
      backupBinlogList:
        additionalProperties:
          type: boolean
        type: object
      backupLogicalList:
        additionalProperties:
          type: boolean
        type: object
      backupPhysicalList:
        additionalProperties:
          type: boolean
        type: object
      binlogParseList:
        additionalProperties:
          type: boolean
        type: object
      canConnectVault:
        type: boolean
      clusters:
        items:
          type: string
        type: array
      config:
        $ref: '#/definitions/github_com_signal18_replication-manager_config.Config'
      confs:
        additionalProperties:
          $ref: '#/definitions/github_com_signal18_replication-manager_config.Config'
        type: object
      cpuprofile:
        type: string
      fullVersion:
        type: string
      graphiteTemplateList:
        additionalProperties:
          type: boolean
        type: object
      hasSavingConfigQueue:
        type: boolean
      hostname:
        type: string
      isGitPull:
        type: boolean
      isGitPush:
        type: boolean
      isSavingConfig:
        type: boolean
      logs:
        $ref: '#/definitions/s18log.HttpLog'
      memprofile:
        type: string
      os:
        type: string
      osUser:
        $ref: '#/definitions/user.User'
      partner:
        $ref: '#/definitions/config.Partner'
      partners:
        items:
          $ref: '#/definitions/config.Partner'
        type: array
      serviceAcl:
        items:
          $ref: '#/definitions/config.Grant'
        type: array
      serviceDisk:
        additionalProperties:
          type: string
        type: object
      serviceFS:
        additionalProperties:
          type: boolean
        type: object
      serviceOrchestrators:
        items:
          $ref: '#/definitions/config.ConfigVariableType'
        type: array
      servicePlans:
        items:
          $ref: '#/definitions/config.ServicePlan'
        type: array
      servicePool:
        additionalProperties:
          type: boolean
        type: object
      serviceRepos:
        items:
          $ref: '#/definitions/config.DockerRepo'
        type: array
      serviceRoles:
        items:
          $ref: '#/definitions/config.Role'
        type: array
      serviceTarballs:
        items:
          $ref: '#/definitions/config.Tarball'
        type: array
      serviceVM:
        additionalProperties:
          type: boolean
        type: object
      spitBrain:
        type: boolean
      status:
        type: string
      termsDT:
        additionalProperties:
          type: string
        type: object
      tests:
        items:
          type: string
        type: array
      uuid:
        type: string
      version:
        type: string
    type: object
  server.token:
    properties:
      token:
        type: string
    type: object
  server.userCredentials:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  sql.NullInt64:
    properties:
      int64:
        type: integer
      valid:
        description: Valid is true if Int64 is not NULL
        type: boolean
    type: object
  sql.NullString:
    properties:
      string:
        type: string
      valid:
        description: Valid is true if String is not NULL
        type: boolean
    type: object
  state.Sla:
    properties:
      firsttime:
        type: integer
      lasttime:
        type: integer
      uptime:
        type: integer
      uptimeFailable:
        type: integer
      uptimeSemisync:
        type: integer
    type: object
  state.StateHttp:
    properties:
      desc:
        type: string
      from:
        type: string
      number:
        type: string
    type: object
  state.StateMachine:
    properties:
      discovered:
        type: boolean
      inFailover:
        type: boolean
      inSchemaMonitor:
        type: boolean
    type: object
  user.User:
    properties:
      gid:
        description: |-
          Gid is the primary group ID.
          On POSIX systems, this is a decimal number representing the gid.
          On Windows, this is a SID in a string format.
          On Plan 9, this is the contents of /dev/user.
        type: string
      homeDir:
        description: HomeDir is the path to the user's home directory (if they have
          one).
        type: string
      name:
        description: |-
          Name is the user's real or display name.
          It might be blank.
          On POSIX systems, this is the first (or only) entry in the GECOS field
          list.
          On Windows, this is the user's display name.
          On Plan 9, this is the contents of /dev/user.
        type: string
      uid:
        description: |-
          Uid is the user ID.
          On POSIX systems, this is a decimal number representing the uid.
          On Windows, this is a security identifier (SID) in a string format.
          On Plan 9, this is the contents of /dev/user.
        type: string
      username:
        description: Username is the login name.
        type: string
    type: object
  version.Version:
    properties:
      dist:
        $ref: '#/definitions/version.Version'
      flavor:
        type: string
      major:
        type: integer
      minor:
        type: integer
      path:
        type: string
      release:
        type: integer
      suffix:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/clusters:
    get:
      description: Fetches the list of clusters that the user has access to based
        on ACL.
      produces:
      - application/json
      responses:
        "200":
          description: List of clusters
          schema:
            items:
              $ref: '#/definitions/cluster.Cluster'
            type: array
        "401":
          description: Unauthenticated resource
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Fetch clusters
      tags:
      - Cluster
  /api/clusters/{clusterName}:
    get:
      description: This endpoint retrieves the details of a specified cluster and
        returns it in JSON format.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Cluster details
          schema:
            $ref: '#/definitions/cluster.Cluster'
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Retrieve details of a cluster
      tags:
      - Cluster
  /api/clusters/{clusterName}/actions/add/{clusterShardingName}:
    post:
      consumes:
      - application/json
      description: This endpoint adds a sharding cluster to an existing cluster and
        triggers a rolling restart.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Cluster Sharding Name
        in: path
        name: clusterShardingName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Sharding cluster added successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Add a sharding cluster to an existing cluster
      tags:
      - ClusterTopology
  /api/clusters/{clusterName}/actions/addserver/{host}/{port}:
    post:
      consumes:
      - application/json
      description: This endpoint adds a server to the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Host
        in: path
        name: host
        required: true
        type: string
      - description: Port
        in: path
        name: port
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Monitor added
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "409":
          description: Error adding new monitor
          schema:
            type: string
        "500":
          description: Cluster Not Found
          schema:
            type: string
      summary: Add a server to a specific cluster
      tags:
      - ClusterMonitor
  /api/clusters/{clusterName}/actions/addserver/{host}/{port}/{type}:
    post:
      consumes:
      - application/json
      description: This endpoint adds a server to the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Host
        in: path
        name: host
        required: true
        type: string
      - description: Port
        in: path
        name: port
        required: true
        type: string
      - description: Type
        in: path
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Monitor added
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "409":
          description: Error adding new monitor
          schema:
            type: string
        "500":
          description: Cluster Not Found
          schema:
            type: string
      summary: Add a server to a specific cluster
      tags:
      - ClusterMonitor
  /api/clusters/{clusterName}/actions/cancel-rolling-reprov:
    post:
      consumes:
      - application/json
      description: This endpoint cancels the rolling reprovision for the specified
        cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully cancelled rolling reprovision
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Cancel rolling reprovision for a specific cluster
      tags:
      - ClusterProvision
  /api/clusters/{clusterName}/actions/cancel-rolling-restart:
    post:
      consumes:
      - application/json
      description: This endpoint cancels the rolling restart for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully cancelled rolling restart
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Cancel rolling restart for a specific cluster
      tags:
      - ClusterMaintenance
  /api/clusters/{clusterName}/actions/certificates-rotate:
    post:
      description: Rotate the keys for the specified cluster
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: Keys rotated successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Rotate keys for a specific cluster
      tags:
      - ClusterCertificates
  /api/clusters/{clusterName}/actions/checksum-all-tables:
    post:
      consumes:
      - application/json
      description: This endpoint triggers the checksum calculation for all tables
        in the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully triggered checksum calculation for all tables
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Calculate checksum for all tables in a specific cluster
      tags:
      - ClusterSchema
  /api/clusters/{clusterName}/actions/failover:
    post:
      consumes:
      - application/json
      description: This endpoint triggers a master failover for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully triggered failover
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Handles the failover process for a given cluster.
      tags:
      - ClusterActions
  /api/clusters/{clusterName}/actions/master-physical-backup:
    post:
      consumes:
      - application/json
      description: This endpoint triggers a physical backup for the master of the
        specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully triggered physical backup
          schema:
            type: string
        "400":
          description: No cluster found
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
      summary: Perform a physical backup for the master of a specific cluster
      tags:
      - ClusterBackup
  /api/clusters/{clusterName}/actions/optimize:
    post:
      consumes:
      - application/json
      description: This endpoint triggers the optimization process for the specified
        cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully triggered optimization
          schema:
            type: string
        "400":
          description: No cluster found
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
      summary: Optimize a specific cluster
      tags:
      - ClusterActions
  /api/clusters/{clusterName}/actions/replication/bootstrap/{topology}:
    post:
      consumes:
      - application/json
      description: This endpoint triggers the bootstrap replication process for the
        specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Topology
        in: path
        name: topology
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully bootstrapped replication
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Bootstrap replication for a specific cluster
      tags:
      - ClusterReplication
  /api/clusters/{clusterName}/actions/replication/cleanup:
    post:
      consumes:
      - application/json
      description: This endpoint triggers the cleanup process for replication bootstrap
        for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully cleaned up replication bootstrap
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Cleanup replication bootstrap for a specific cluster
      tags:
      - ClusterReplication
  /api/clusters/{clusterName}/actions/reset-failover-control:
    post:
      consumes:
      - application/json
      description: This endpoint resets the failover control for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully reset failover control
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Reset failover control for a specific cluster
      tags:
      - ClusterActions
  /api/clusters/{clusterName}/actions/reset-sla:
    post:
      description: Reset the SLA for the specified cluster
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: SLA reset successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Reset SLA for a specific cluster
      tags:
      - ClusterActions
  /api/clusters/{clusterName}/actions/rolling:
    post:
      consumes:
      - application/json
      description: This endpoint triggers a rolling restart for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully triggered rolling restart
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Handles the rolling restart process for a given cluster.
      tags:
      - ClusterMaintenance
  /api/clusters/{clusterName}/actions/rotate-passwords:
    post:
      consumes:
      - application/json
      description: This endpoint rotates the passwords for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully rotated passwords
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Rotate passwords for a specific cluster
      tags:
      - ClusterActions
  /api/clusters/{clusterName}/actions/start-traffic:
    post:
      consumes:
      - application/json
      description: This endpoint starts traffic for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully started traffic
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Start traffic for a specific cluster
      tags:
      - ClusterTraffics
  /api/clusters/{clusterName}/actions/stop-traffic:
    post:
      consumes:
      - application/json
      description: This endpoint stops traffic for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully stopped traffic
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Stop traffic for a specific cluster
      tags:
      - ClusterTraffics
  /api/clusters/{clusterName}/actions/switchover:
    post:
      consumes:
      - application/json
      description: This endpoint triggers a master switchover for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Preferred Master
        in: formData
        name: prefmaster
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully triggered switchover
          schema:
            type: string
        "400":
          description: Master failed
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Handles the switchover process for a given cluster.
      tags:
      - ClusterActions
  /api/clusters/{clusterName}/actions/sysbench:
    post:
      consumes:
      - application/json
      description: This endpoint runs sysbench for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Number of threads
        in: query
        name: threads
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully triggered sysbench
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Run sysbench for a specific cluster
      tags:
      - ClusterTest
  /api/clusters/{clusterName}/actions/waitdatabases:
    post:
      consumes:
      - application/json
      description: This endpoint waits for the databases to be ready for the specified
        cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Databases are ready
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Wait for databases to be ready for a specific cluster
      tags:
      - Cluster
  /api/clusters/{clusterName}/backups:
    get:
      description: This endpoint retrieves the backups for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of backups
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Retrieve backups for a specific cluster
      tags:
      - ClusterBackups
  /api/clusters/{clusterName}/certificates:
    get:
      description: This endpoint retrieves the client certificates for the specified
        cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of client certificates
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Retrieve client certificates for a specific cluster
      tags:
      - ClusterCertificates
  /api/clusters/{clusterName}/diffvariables:
    get:
      description: This endpoint retrieves the variable differences for the specified
        cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of variable differences
          schema:
            items:
              $ref: '#/definitions/cluster.VariableDiff'
            type: array
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Retrieve variable differences for a specific cluster
      tags:
      - Cluster
  /api/clusters/{clusterName}/graphite-filterlist:
    get:
      description: This endpoint retrieves the Graphite filter list for the specified
        cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of Graphite filters
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Retrieve Graphite filter list for a specific cluster
      tags:
      - ClusterGraphite
  /api/clusters/{clusterName}/jobs:
    get:
      description: This endpoint retrieves the job entries for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of job entries
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found
          schema:
            type: string
      summary: Retrieve job entries for a specific cluster
      tags:
      - Cluster
  /api/clusters/{clusterName}/need-rolling-reprov:
    get:
      description: Checks if a specified cluster needs a rolling reprovision.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: 200 -Need rolling reprov!
          schema:
            type: string
        "500":
          description: 503 -No rolling reprov needed!" or "500 -No cluster
          schema:
            type: string
      summary: Check if a cluster needs a rolling reprovision
      tags:
      - Database
  /api/clusters/{clusterName}/need-rolling-restart:
    get:
      description: Checks if a specified cluster needs a rolling restart.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: 200 -Need rolling restart!
          schema:
            type: string
        "500":
          description: 503 -No rolling restart needed!" or "500 -No cluster
          schema:
            type: string
      summary: Check if a cluster needs a rolling restart
      tags:
      - Database
  /api/clusters/{clusterName}/proxies/{proxyName}/actions/need-reprov:
    get:
      consumes:
      - application/json
      description: Check if the proxy service for a given cluster and proxy needs
        reprovisioning
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Proxy Name
        in: path
        name: proxyName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Need reprov!
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
        "503":
          description: No reprov needed!" "Not a Valid Server!
          schema:
            type: string
      summary: Check if Proxy Needs Reprovision
      tags:
      - Proxies
  /api/clusters/{clusterName}/proxies/{proxyName}/actions/need-restart:
    get:
      consumes:
      - application/json
      description: Check if the proxy service for a given cluster and proxy needs
        a restart
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Proxy Name
        in: path
        name: proxyName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Need restart!
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
        "503":
          description: No restart needed!" "Not a Valid Server!
          schema:
            type: string
      summary: Check if Proxy Needs Restart
      tags:
      - Proxies
  /api/clusters/{clusterName}/proxies/{proxyName}/actions/provision:
    post:
      consumes:
      - application/json
      description: Provision the proxy service for a given cluster and proxy
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Proxy Name
        in: path
        name: proxyName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Proxy Service Provisioned
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" "Server Not Found
          schema:
            type: string
      summary: Provision Proxy Service
      tags:
      - Proxies
  /api/clusters/{clusterName}/proxies/{proxyName}/actions/start:
    post:
      consumes:
      - application/json
      description: Start the proxy service for a given cluster and proxy
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Proxy Name
        in: path
        name: proxyName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Proxy Service Started
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" "Server Not Found
          schema:
            type: string
      summary: Start Proxy Service
      tags:
      - Proxies
  /api/clusters/{clusterName}/proxies/{proxyName}/actions/stop:
    post:
      consumes:
      - application/json
      description: Stop the proxy service for a given cluster and proxy
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Proxy Name
        in: path
        name: proxyName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Proxy Service Stopped
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" "Server Not Found
          schema:
            type: string
      summary: Stop Proxy Service
      tags:
      - Proxies
  /api/clusters/{clusterName}/proxies/{proxyName}/actions/unprovision:
    post:
      consumes:
      - application/json
      description: Unprovision the proxy service for a given cluster and proxy
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Proxy Name
        in: path
        name: proxyName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Proxy Service Unprovisioned
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" "Server Not Found
          schema:
            type: string
      summary: Unprovision Proxy Service
      tags:
      - Proxies
  /api/clusters/{clusterName}/queryrules:
    get:
      description: This endpoint retrieves the query rules for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of query rules
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Retrieve query rules for a specific cluster
      tags:
      - Cluster
  /api/clusters/{clusterName}/sales/accept-subscription:
    post:
      consumes:
      - application/json
      description: This endpoint accepts a subscription for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: User Form
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/cluster.UserForm'
      produces:
      - application/json
      responses:
        "200":
          description: Email sent to sponsor!
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Error accepting subscription
          schema:
            type: string
      summary: Accept a subscription for a specific cluster
      tags:
      - Cloud18
  /api/clusters/{clusterName}/sales/end-subscription:
    post:
      consumes:
      - application/json
      description: This endpoint removes a sponsor from the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: User Form
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/cluster.UserForm'
      produces:
      - application/json
      responses:
        "200":
          description: Sponsor subscription removed!
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Error removing sponsor subscription
          schema:
            type: string
      summary: Remove a sponsor from a specific cluster
      tags:
      - Cloud18
  /api/clusters/{clusterName}/sales/refuse-subscription:
    post:
      consumes:
      - application/json
      description: This endpoint rejects a subscription for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: User Form
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/cluster.UserForm'
      produces:
      - application/json
      responses:
        "200":
          description: Subscription removed!
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Error removing subscription
          schema:
            type: string
      summary: Reject a subscription for a specific cluster
      tags:
      - Cloud18
  /api/clusters/{clusterName}/schema:
    get:
      description: This endpoint retrieves the schema information for the specified
        cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Schema information
          schema:
            additionalProperties: true
            type: object
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Retrieve schema information for a specific cluster
      tags:
      - ClusterSchema
  /api/clusters/{clusterName}/schema/{schemaName}/{tableName}/actions/checksum-table:
    post:
      consumes:
      - application/json
      description: This endpoint triggers the checksum calculation for a specific
        table in the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Schema Name
        in: path
        name: schemaName
        required: true
        type: string
      - description: Table Name
        in: path
        name: tableName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully triggered checksum calculation for the table
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Calculate checksum for a specific table in a specific cluster
      tags:
      - ClusterSchema
  /api/clusters/{clusterName}/schema/{schemaName}/{tableName}/actions/move-table/{clusterShard}:
    post:
      consumes:
      - application/json
      description: This endpoint moves a table to a different shard cluster for the
        specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Schema Name
        in: path
        name: schemaName
        required: true
        type: string
      - description: Table Name
        in: path
        name: tableName
        required: true
        type: string
      - description: Cluster Shard
        in: path
        name: clusterShard
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully moved table
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Move a table to a different shard cluster
      tags:
      - ClusterSchema
  /api/clusters/{clusterName}/schema/{schemaName}/{tableName}/actions/reshard-table:
    post:
      consumes:
      - application/json
      description: This endpoint triggers the resharding of a table for the specified
        cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Schema Name
        in: path
        name: schemaName
        required: true
        type: string
      - description: Table Name
        in: path
        name: tableName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully triggered resharding of the table
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Reshard a table for a specific cluster
      tags:
      - ClusterSchema
  /api/clusters/{clusterName}/schema/{schemaName}/{tableName}/actions/reshard-table/{clusterList}:
    post:
      consumes:
      - application/json
      description: This endpoint triggers the resharding of a table for the specified
        cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Schema Name
        in: path
        name: schemaName
        required: true
        type: string
      - description: Table Name
        in: path
        name: tableName
        required: true
        type: string
      - description: Cluster List
        in: path
        name: clusterList
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully triggered resharding of the table
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Reshard a table for a specific cluster
      tags:
      - ClusterSchema
  /api/clusters/{clusterName}/schema/{schemaName}/{tableName}/actions/universal-table:
    post:
      consumes:
      - application/json
      description: This endpoint sets a universal table for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Schema Name
        in: path
        name: schemaName
        required: true
        type: string
      - description: Table Name
        in: path
        name: tableName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully set universal table
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Set a universal table for a specific cluster
      tags:
      - ClusterSchema
  /api/clusters/{clusterName}/send-vault-token:
    post:
      consumes:
      - application/json
      description: This endpoint sends the Vault token to the specified cluster via
        email.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Vault token sent successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Send Vault token to a specific cluster
      tags:
      - ClusterVault
  /api/clusters/{clusterName}/servers/{serverName}/{serverPort}/backup:
    get:
      description: Initiates a physical backup on a specified server port within a
        cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      - description: Server Port
        in: path
        name: serverPort
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Backup initiated successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Perform a physical backup on a server port
      tags:
      - DatabaseBackup
  /api/clusters/{clusterName}/servers/{serverName}/{serverPort}/config:
    get:
      description: Retrieves the configuration of a specified server port within a
        cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      - description: Server Port
        in: path
        name: serverPort
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: Configuration file
          schema:
            type: file
        "403":
          description: No valid ACL
          schema:
            type: string
        "404":
          description: File not found
          schema:
            type: string
        "500":
          description: No cluster" or "No server
          schema:
            type: string
      summary: Get server port configuration
      tags:
      - Database
  /api/clusters/{clusterName}/servers/{serverName}/{serverPort}/is-master:
    get:
      description: Checks if a specified server port within a cluster is a master.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      - description: Server Port
        in: path
        name: serverPort
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: 200 -Valid Master!
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
        "503":
          description: 503 -Not a Valid Master!
          schema:
            type: string
      summary: Check if a server port is a master
      tags:
      - Database
  /api/clusters/{clusterName}/servers/{serverName}/{serverPort}/is-slave:
    get:
      description: Checks if a specified server port within a cluster is a slave.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      - description: Server Port
        in: path
        name: serverPort
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: 200 -Valid Slave!
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
        "503":
          description: 503 -Not a Valid Slave!
          schema:
            type: string
      summary: Check if a server port is a slave
      tags:
      - Database
  /api/clusters/{clusterName}/servers/{serverName}/{serverPort}/need-config-change:
    get:
      description: Checks if a specified server within a cluster needs a config change.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      - description: Server Port
        in: path
        name: serverPort
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: 200 -Need config change!
          schema:
            type: string
        "500":
          description: 500 -No config change needed!" or "500 -No valid server!" or
            "500 -No cluster!
          schema:
            type: string
      summary: Check if a server needs a config change
      tags:
      - Database
  /api/clusters/{clusterName}/servers/{serverName}/{serverPort}/need-prov:
    get:
      description: Checks if a specified server within a cluster needs provisioning.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      - description: Server Port
        in: path
        name: serverPort
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: 200 -Need provisioning!
          schema:
            type: string
        "500":
          description: 503 -Not a Valid Server!
          schema:
            type: string
        "503":
          description: 503 -No provisioning needed!
          schema:
            type: string
      summary: Check if a server needs provisioning
      tags:
      - Database
  /api/clusters/{clusterName}/servers/{serverName}/{serverPort}/need-reprov:
    get:
      description: Checks if a specified server within a cluster needs re-provisioning.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      - description: Server Port
        in: path
        name: serverPort
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: 200 -Need reprov!
          schema:
            type: string
        "500":
          description: 503 -Not a Valid Server!
          schema:
            type: string
        "503":
          description: 503 -No reprov needed!
          schema:
            type: string
      summary: Check if a server needs re-provisioning
      tags:
      - Database
  /api/clusters/{clusterName}/servers/{serverName}/{serverPort}/need-restart:
    get:
      description: Checks if a specified server within a cluster needs a restart.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      - description: Server Port
        in: path
        name: serverPort
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: 200 -Need restart!
          schema:
            type: string
        "500":
          description: 503 -Not a Valid Server!
          schema:
            type: string
        "503":
          description: 503 -No restart needed!
          schema:
            type: string
      summary: Check if a server needs a restart
      tags:
      - Database
  /api/clusters/{clusterName}/servers/{serverName}/{serverPort}/need-start:
    get:
      description: Checks if a specified server within a cluster needs to start.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      - description: Server Port
        in: path
        name: serverPort
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: 200 -Need start!
          schema:
            type: string
        "500":
          description: 500 -No start needed!" or "500 -No valid server!" or "500 -No
            cluster!
          schema:
            type: string
      summary: Check if a server needs to start
      tags:
      - Database
  /api/clusters/{clusterName}/servers/{serverName}/{serverPort}/need-stop:
    get:
      description: Checks if a specified server within a cluster needs to stop.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      - description: Server Port
        in: path
        name: serverPort
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: 200 -Need stop!
          schema:
            type: string
        "500":
          description: 500 -No stop needed!" or "500 -No valid server!" or "500 -No
            cluster!
          schema:
            type: string
      summary: Check if a server needs to stop
      tags:
      - Database
  /api/clusters/{clusterName}/servers/{serverName}/{serverPort}/need-unprov:
    get:
      description: Checks if a specified server within a cluster needs unprovisioning.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      - description: Server Port
        in: path
        name: serverPort
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: 200 -Need unprov!
          schema:
            type: string
        "500":
          description: 503 -Not a Valid Server!
          schema:
            type: string
        "503":
          description: 503 -No unprov needed!
          schema:
            type: string
      summary: Check if a server needs unprovisioning
      tags:
      - Database
  /api/clusters/{clusterName}/servers/{serverName}/{serverPort}/write-log/{task}:
    post:
      description: Writes logs for a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      - description: Server Port
        in: path
        name: serverPort
        required: true
        type: string
      - description: Task
        in: path
        name: task
        required: true
        type: string
      - description: Log Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/server.DecodedData'
      produces:
      - application/json
      responses:
        "200":
          description: Message logged
          schema:
            $ref: '#/definitions/server.ApiResponse'
        "400":
          description: 'Bad request: Task is not registered" or "Decode reading body"
            or "Decode body'
          schema:
            type: string
        "500":
          description: No cluster" or "No server" or "Error decrypting data
          schema:
            type: string
      summary: Write logs for a server
      tags:
      - DatabaseTasks
  /api/clusters/{clusterName}/servers/{serverName}/actions/backup-error-log:
    get:
      description: Initiates a backup of the error log on a specified server within
        a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Backup initiated successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Perform a backup of the error log on a server
      tags:
      - DatabaseLogs
  /api/clusters/{clusterName}/servers/{serverName}/actions/backup-logical:
    get:
      description: Initiates a logical backup on a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Backup initiated successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Perform a logical backup on a server
      tags:
      - DatabaseBackup
  /api/clusters/{clusterName}/servers/{serverName}/actions/backup-physical:
    get:
      description: Initiates a physical backup on a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Backup initiated successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Perform a physical backup on a server
      tags:
      - DatabaseBackup
  /api/clusters/{clusterName}/servers/{serverName}/actions/backup-slowquery-log:
    get:
      description: Initiates a backup of the slow query log on a specified server
        within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Backup initiated successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Perform a backup of the slow query log on a server
      tags:
      - DatabaseLogs
  /api/clusters/{clusterName}/servers/{serverName}/actions/del-maintenance:
    get:
      description: Deletes the maintenance mode on a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Maintenance mode deleted successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Delete maintenance mode on a server
      tags:
      - DatabaseMaintenance
  /api/clusters/{clusterName}/servers/{serverName}/actions/flush-logs:
    get:
      description: Flushes the logs on a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Logs flushed successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Flush logs on a server
      tags:
      - DatabaseLogs
  /api/clusters/{clusterName}/servers/{serverName}/actions/job-cancel/{task}:
    get:
      description: Cancels a task identified by its name on a specified server within
        a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      - description: Task Name
        in: path
        name: task
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Task canceled successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Error canceling
            task
          schema:
            type: string
      summary: Cancel a task on a server
      tags:
      - DatabaseTasks
  /api/clusters/{clusterName}/servers/{serverName}/actions/maintenance:
    get:
      description: Toggles the maintenance mode on a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Maintenance mode toggled successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Toggle maintenance mode on a server
      tags:
      - DatabaseMaintenance
  /api/clusters/{clusterName}/servers/{serverName}/actions/optimize:
    get:
      description: Optimizes a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Server optimized successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Optimize a server
      tags:
      - DatabaseActions
  /api/clusters/{clusterName}/servers/{serverName}/actions/pitr:
    post:
      description: Initiates a point-in-time recovery on a specified server within
        a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: PITR initiated successfully
          schema:
            $ref: '#/definitions/server.ApiResponse'
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Decode error"
            or "PITR error
          schema:
            type: string
      summary: Perform a point-in-time recovery on a server
      tags:
      - DatabaseBackup
  /api/clusters/{clusterName}/servers/{serverName}/actions/provision:
    get:
      description: Provisions a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Server provisioned successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Provision a server
      tags:
      - DatabaseProvision
  /api/clusters/{clusterName}/servers/{serverName}/actions/reseed-cancel/{task}:
    get:
      description: Cancels a reseed task identified by its name on a specified server
        within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      - description: Task Name
        in: path
        name: task
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Task canceled successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Error canceling
            task
          schema:
            type: string
      summary: Cancel a reseed task on a server
      tags:
      - DatabaseBackup
  /api/clusters/{clusterName}/servers/{serverName}/actions/reseed/{backupMethod}:
    get:
      description: Reseeds a specified server within a cluster using the specified
        backup method.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      - description: Backup Method
        in: path
        name: backupMethod
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Reseed initiated successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Error reseed logical
            backup" or "Error reseed physical backup
          schema:
            type: string
      summary: Reseed a server
      tags:
      - DatabaseBackup
  /api/clusters/{clusterName}/servers/{serverName}/actions/reset-master:
    get:
      description: Resets the master on a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Master reset successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Reset the master on a server
      tags:
      - DatabaseReplication
  /api/clusters/{clusterName}/servers/{serverName}/actions/reset-pfs-queries:
    get:
      description: Resets PFS queries on a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: PFS queries reset successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Reset PFS queries on a server
      tags:
      - DatabaseQueries
  /api/clusters/{clusterName}/servers/{serverName}/actions/reset-slave-all:
    get:
      description: Resets all slaves on a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Slaves reset successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Reset all slaves on a server
      tags:
      - DatabaseReplication
  /api/clusters/{clusterName}/servers/{serverName}/actions/run-jobs:
    get:
      description: Runs jobs on a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Jobs run successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Error running
            job
          schema:
            type: string
      summary: Run jobs on a server
      tags:
      - DatabaseTasks
  /api/clusters/{clusterName}/servers/{serverName}/actions/set-ignored:
    get:
      description: Sets a specified server within a cluster as ignored.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Server set as ignored successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Set a server as ignored
      tags:
      - DatabaseTopology
  /api/clusters/{clusterName}/servers/{serverName}/actions/set-long-query-time/{queryTime}:
    get:
      description: Sets the long query time on a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      - description: Query Time
        in: path
        name: queryTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Long query time set successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Set long query time on a server
      tags:
      - DatabaseQueries
  /api/clusters/{clusterName}/servers/{serverName}/actions/set-maintenance:
    get:
      description: Sets a specified server within a cluster to maintenance mode.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Server set to maintenance mode successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Set a server to maintenance mode
      tags:
      - DatabaseMaintenance
  /api/clusters/{clusterName}/servers/{serverName}/actions/set-prefered:
    get:
      description: Sets a specified server within a cluster as preferred.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Server set as preferred successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Set a server as preferred
      tags:
      - DatabaseTopology
  /api/clusters/{clusterName}/servers/{serverName}/actions/set-unrated:
    get:
      description: Sets a specified server within a cluster as unrated.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Server set as unrated successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Set a server as unrated
      tags:
      - DatabaseTopology
  /api/clusters/{clusterName}/servers/{serverName}/actions/skip-replication-event:
    get:
      description: Skips a replication event on a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Replication event skipped successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Skip a replication event on a server
      tags:
      - DatabaseReplication
  /api/clusters/{clusterName}/servers/{serverName}/actions/start:
    get:
      description: Starts a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Server started successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Start a server
      tags:
      - DatabaseActions
  /api/clusters/{clusterName}/servers/{serverName}/actions/start-slave:
    get:
      description: Starts the slave on a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Slave started successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Start the slave on a server
      tags:
      - DatabaseReplication
  /api/clusters/{clusterName}/servers/{serverName}/actions/stop:
    get:
      description: Stops a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Server stopped successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Stop a server
      tags:
      - DatabaseActions
  /api/clusters/{clusterName}/servers/{serverName}/actions/stop-slave:
    get:
      description: Stops the slave on a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Slave stopped successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Stop the slave on a server
      tags:
      - DatabaseReplication
  /api/clusters/{clusterName}/servers/{serverName}/actions/switchover:
    get:
      description: Initiates a switchover on a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Switchover initiated successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Master failed,
            cannot initiate switchover
          schema:
            type: string
      summary: Perform a switchover on a server
      tags:
      - DatabaseTopology
  /api/clusters/{clusterName}/servers/{serverName}/actions/toogle-innodb-monitor:
    get:
      description: Toggles the InnoDB monitor on a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: InnoDB monitor toggled successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Toggle InnoDB monitor on a server
      tags:
      - Database
  /api/clusters/{clusterName}/servers/{serverName}/actions/toogle-meta-data-locks:
    get:
      description: Toggles the metadata locks on a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Metadata locks toggled successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Toggle metadata locks on a server
      tags:
      - DatabaseActions
  /api/clusters/{clusterName}/servers/{serverName}/actions/toogle-pfs-slow-query:
    get:
      description: Toggles the PFS slow query capture on a specified server within
        a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: PFS slow query capture toggled successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Toggle PFS slow query capture on a server
      tags:
      - DatabaseQueries
  /api/clusters/{clusterName}/servers/{serverName}/actions/toogle-query-response-time:
    get:
      description: Toggles the query response time on a specified server within a
        cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Query response time toggled successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Toggle query response time on a server
      tags:
      - DatabaseActions
  /api/clusters/{clusterName}/servers/{serverName}/actions/toogle-read-only:
    get:
      description: Toggles the read-only mode on a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Read-only mode toggled successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Toggle read-only mode on a server
      tags:
      - DatabaseActions
  /api/clusters/{clusterName}/servers/{serverName}/actions/toogle-slow-query:
    get:
      description: Toggles the slow query on a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Slow query toggled successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Toggle slow query on a server
      tags:
      - DatabaseQueries
  /api/clusters/{clusterName}/servers/{serverName}/actions/toogle-slow-query-capture:
    get:
      description: Toggles the slow query capture on a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Slow query capture toggled successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Toggle slow query capture on a server
      tags:
      - DatabaseQueries
  /api/clusters/{clusterName}/servers/{serverName}/actions/toogle-slow-query-table:
    get:
      description: Toggles the slow query table mode on a specified server within
        a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Slow query table mode toggled successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Toggle slow query table mode on a server
      tags:
      - DatabaseQueries
  /api/clusters/{clusterName}/servers/{serverName}/actions/toogle-sql-error-log:
    get:
      description: Toggles the SQL error log on a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: SQL error log toggled successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Toggle SQL error log on a server
      tags:
      - DatabaseLogs
  /api/clusters/{clusterName}/servers/{serverName}/actions/unprovision:
    get:
      description: Unprovisions a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Server unprovisioned successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Unprovision a server
      tags:
      - DatabaseProvision
  /api/clusters/{clusterName}/servers/{serverName}/actions/wait-innodb-purge:
    get:
      description: Waits for InnoDB purge on a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: InnoDB purge completed successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Error waiting
            for InnoDB purge
          schema:
            type: string
      summary: Wait for InnoDB purge on a server
      tags:
      - DatabaseActions
  /api/clusters/{clusterName}/servers/{serverName}/all-slaves-status:
    get:
      description: Retrieves the status of all slaves of a specified server within
        a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Status of all slaves retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Encoding error
          schema:
            type: string
      summary: Get status of all slaves of a server
      tags:
      - Database
  /api/clusters/{clusterName}/servers/{serverName}/digest-statements-pfs:
    get:
      description: Retrieves the PFS statements of a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: PFS statements retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Encoding error
          schema:
            type: string
      summary: Get PFS statements of a server
      tags:
      - DatabaseQueries
  /api/clusters/{clusterName}/servers/{serverName}/digest-statements-slow:
    get:
      description: Retrieves the PFS statements from the slow log of a specified server
        within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: PFS statements from slow log retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Encoding error
          schema:
            type: string
      summary: Get PFS statements from the slow log of a server
      tags:
      - DatabaseQueries
  /api/clusters/{clusterName}/servers/{serverName}/errorlog:
    get:
      description: Retrieves the error log of a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Error log retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Encoding error
          schema:
            type: string
      summary: Get error log of a server
      tags:
      - DatabaseLogs
  /api/clusters/{clusterName}/servers/{serverName}/is-master:
    get:
      description: Checks if a specified server within a cluster is a master.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: 200 -Valid Master!
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
        "503":
          description: 503 -Not a Valid Master!
          schema:
            type: string
      summary: Check if a server is a master
      tags:
      - Database
  /api/clusters/{clusterName}/servers/{serverName}/is-slave:
    get:
      description: Checks if a specified server within a cluster is a slave.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: 200 -Valid Slave!
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
        "503":
          description: 503 -Not a Valid Slave!
          schema:
            type: string
      summary: Check if a server is a slave
      tags:
      - Database
  /api/clusters/{clusterName}/servers/{serverName}/master-status:
    get:
      description: Retrieves the master status of a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Master status retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Encoding error
          schema:
            type: string
      summary: Get master status of a server
      tags:
      - Database
  /api/clusters/{clusterName}/servers/{serverName}/meta-data-locks:
    get:
      description: Retrieves the metadata locks of a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Metadata locks retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Encoding error
          schema:
            type: string
      summary: Get metadata locks of a server
      tags:
      - Database
  /api/clusters/{clusterName}/servers/{serverName}/processlist:
    get:
      description: Retrieves the process list of a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Process list retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Encoding error
          schema:
            type: string
      summary: Get process list of a server
      tags:
      - Database
  /api/clusters/{clusterName}/servers/{serverName}/queries/{queryDigest}/actions/analyze-pfs:
    get:
      description: Analyzes a query identified by its digest on a specified server
        within a cluster using PFS.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      - description: Query Digest
        in: path
        name: queryDigest
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Query analyzed successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Analyze a query using PFS on a server
      tags:
      - DatabaseQueries
  /api/clusters/{clusterName}/servers/{serverName}/queries/{queryDigest}/actions/analyze-slowlog:
    get:
      description: Analyzes a query identified by its digest on a specified server
        within a cluster using the slow log.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      - description: Query Digest
        in: path
        name: queryDigest
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Query analyzed successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Analyze a query using the slow log on a server
      tags:
      - DatabaseQueries
  /api/clusters/{clusterName}/servers/{serverName}/queries/{queryDigest}/actions/explain-pfs:
    get:
      description: Explains a query identified by its digest on a specified server
        within a cluster using PFS.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      - description: Query Digest
        in: path
        name: queryDigest
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Query explained successfully
          schema:
            additionalProperties: true
            type: object
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Encoding error
          schema:
            type: string
      summary: Explain a query using PFS on a server
      tags:
      - DatabaseQueries
  /api/clusters/{clusterName}/servers/{serverName}/queries/{queryDigest}/actions/explain-slowlog:
    get:
      description: Explains a query identified by its digest on a specified server
        within a cluster using the slow log.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      - description: Query Digest
        in: path
        name: queryDigest
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Query explained successfully
          schema:
            additionalProperties: true
            type: object
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Encoding error
          schema:
            type: string
      summary: Explain a query using the slow log on a server
      tags:
      - DatabaseQueries
  /api/clusters/{clusterName}/servers/{serverName}/queries/{queryDigest}/actions/kill-query:
    get:
      description: Kills a query identified by its digest on a specified server within
        a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      - description: Query Digest
        in: path
        name: queryDigest
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Query killed successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Kill a query on a server
      tags:
      - DatabaseQueries
  /api/clusters/{clusterName}/servers/{serverName}/queries/{queryDigest}/actions/kill-thread:
    get:
      description: Kills a thread identified by its digest on a specified server within
        a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      - description: Query Digest
        in: path
        name: queryDigest
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Query killed successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Kill a thread on a server
      tags:
      - DatabaseQueries
  /api/clusters/{clusterName}/servers/{serverName}/query-response-time:
    get:
      description: Retrieves the query response time of a specified server within
        a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Query response time retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Encoding error
          schema:
            type: string
      summary: Get query response time of a server
      tags:
      - DatabaseQueries
  /api/clusters/{clusterName}/servers/{serverName}/schemas:
    get:
      description: Retrieves the schemas of a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Schemas retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Encoding error
          schema:
            type: string
      summary: Get schemas of a server
      tags:
      - DatabaseSchema
  /api/clusters/{clusterName}/servers/{serverName}/service-opensvc:
    get:
      description: Retrieves the database service configuration of a specified server
        within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Database service configuration retrieved successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found
          schema:
            type: string
      summary: Get database service configuration of a server
      tags:
      - Database
  /api/clusters/{clusterName}/servers/{serverName}/slow-queries:
    get:
      description: Retrieves the slow log of a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Slow log retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Encoding error
          schema:
            type: string
      summary: Get slow log of a server
      tags:
      - DatabaseQueries
  /api/clusters/{clusterName}/servers/{serverName}/status:
    get:
      description: Retrieves the status of a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Status retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Encoding error
          schema:
            type: string
      summary: Get status of a server
      tags:
      - Database
  /api/clusters/{clusterName}/servers/{serverName}/status-delta:
    get:
      description: Retrieves the status delta of a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Status delta retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Encoding error
          schema:
            type: string
      summary: Get status delta of a server
      tags:
      - Database
  /api/clusters/{clusterName}/servers/{serverName}/status-innodb:
    get:
      description: Retrieves the InnoDB status of a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: InnoDB status retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Encoding error
          schema:
            type: string
      summary: Get InnoDB status of a server
      tags:
      - Database
  /api/clusters/{clusterName}/servers/{serverName}/tables:
    get:
      description: Retrieves the tables of a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Tables retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Encoding error
          schema:
            type: string
      summary: Get tables of a server
      tags:
      - Database
  /api/clusters/{clusterName}/servers/{serverName}/variables:
    get:
      description: Retrieves the variables of a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Variables retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Encoding error
          schema:
            type: string
      summary: Get variables of a server
      tags:
      - Database
  /api/clusters/{clusterName}/servers/{serverName}/vtables:
    get:
      description: Retrieves the virtual tables of a specified server within a cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: path
        name: serverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Virtual tables retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found" or "Server Not Found" or "Encoding error
          schema:
            type: string
      summary: Get virtual tables of a server
      tags:
      - Database
  /api/clusters/{clusterName}/services/actions/provision:
    post:
      consumes:
      - application/json
      description: This endpoint provisions services for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully provisioned services
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Provision services for a specific cluster
      tags:
      - ClusterProvision
  /api/clusters/{clusterName}/services/actions/unprovision:
    post:
      consumes:
      - application/json
      description: This endpoint unprovisions services for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully unprovisioned services
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Unprovision services for a specific cluster
      tags:
      - ClusterProvision
  /api/clusters/{clusterName}/settings:
    get:
      description: This endpoint retrieves the settings for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Cluster settings
          schema:
            $ref: '#/definitions/github_com_signal18_replication-manager_config.Config'
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Retrieve settings for a specific cluster
      tags:
      - ClusterSettings
  /api/clusters/{clusterName}/settings/actions/add-db-tag/{tagValue}:
    post:
      consumes:
      - application/json
      description: This endpoint adds a tag to the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Tag Value
        in: path
        name: tagValue
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Tag added successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found
          schema:
            type: string
      summary: Add a tag to a specific cluster
      tags:
      - ClusterTags
  /api/clusters/{clusterName}/settings/actions/add-proxy-tag/{tagValue}:
    post:
      consumes:
      - application/json
      description: This endpoint adds a proxy tag to the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Tag Value
        in: path
        name: tagValue
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Tag added successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found
          schema:
            type: string
      summary: Add a proxy tag to a specific cluster
      tags:
      - ClusterTags
  /api/clusters/{clusterName}/settings/actions/apply-dynamic-config:
    post:
      consumes:
      - application/json
      description: This endpoint applies dynamic configuration for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully applied dynamic configuration
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Apply dynamic configuration for a specific cluster
      tags:
      - ClusterTags
  /api/clusters/{clusterName}/settings/actions/certificates-reload:
    post:
      consumes:
      - application/json
      description: This endpoint reloads the client certificates for the specified
        cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully reloaded client certificates
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Reload client certificates for a specific cluster
      tags:
      - ClusterSettings
  /api/clusters/{clusterName}/settings/actions/discover:
    post:
      consumes:
      - application/json
      description: This endpoint triggers the discovery of settings for the specified
        cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully discovered settings
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Discover settings for a specific cluster
      tags:
      - ClusterSettings
  /api/clusters/{clusterName}/settings/actions/drop-db-tag/{tagValue}:
    post:
      consumes:
      - application/json
      description: This endpoint removes a tag from the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Tag Value
        in: path
        name: tagValue
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Tag removed successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found
          schema:
            type: string
      summary: Remove a tag from a specific cluster
      tags:
      - ClusterTags
  /api/clusters/{clusterName}/settings/actions/drop-proxy-tag/{tagValue}:
    post:
      consumes:
      - application/json
      description: This endpoint removes a proxy tag from the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Tag Value
        in: path
        name: tagValue
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Tag removed successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found
          schema:
            type: string
      summary: Remove a proxy tag from a specific cluster
      tags:
      - ClusterTags
  /api/clusters/{clusterName}/settings/actions/reload:
    post:
      consumes:
      - application/json
      description: This endpoint reloads the settings for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully reloaded settings
          schema:
            type: string
        "500":
          description: Cluster Not Found
          schema:
            type: string
      summary: Reload cluster settings
      tags:
      - ClusterSettings
  /api/clusters/{clusterName}/settings/actions/reload-graphite-filterlist:
    post:
      consumes:
      - application/json
      description: This endpoint reloads the Graphite filter list for the specified
        cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully reloaded Graphite filter list
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Reload Graphite filter list for a specific cluster
      tags:
      - ClusterGraphite
  /api/clusters/{clusterName}/settings/actions/reset-graphite-filterlist/{template}:
    post:
      consumes:
      - application/json
      description: This endpoint resets the Graphite filter list for the specified
        cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Template
        in: path
        name: template
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully reset Graphite filter list
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Reset Graphite filter list for a specific cluster
      tags:
      - ClusterGraphite
  /api/clusters/{clusterName}/settings/actions/set-cron/{settingName}/{settingValue}:
    post:
      consumes:
      - application/json
      description: This endpoint sets the cron jobs for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Setting Name
        in: path
        name: settingName
        required: true
        type: string
      - description: Setting Value
        in: path
        name: settingValue
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully set cron job
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Set cron jobs for a specific cluster
      tags:
      - ClusterSettings
  /api/clusters/{clusterName}/settings/actions/set-graphite-filterlist/{filterType}:
    post:
      consumes:
      - application/json
      description: This endpoint sets the Graphite filter list for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Filter Type
        in: path
        name: filterType
        required: true
        type: string
      - description: Graphite Filter List
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/cluster.GraphiteFilterList'
      produces:
      - application/json
      responses:
        "200":
          description: Filterlist updated
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Set Graphite filter list for a specific cluster
      tags:
      - ClusterGraphite
  /api/clusters/{clusterName}/settings/actions/set/{settingName}/{settingValue}:
    post:
      consumes:
      - application/json
      description: This endpoint sets the settings for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Setting Name
        in: path
        name: settingName
        required: true
        type: string
      - description: Setting Value
        in: path
        name: settingValue
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully set setting
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Set settings for a specific cluster
      tags:
      - ClusterSettings
  /api/clusters/{clusterName}/settings/actions/switch/{settingName}:
    post:
      consumes:
      - application/json
      description: This endpoint switches the settings for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Setting Name
        in: path
        name: settingName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully switched setting
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Switch settings for a specific cluster
      tags:
      - ClusterSettings
  /api/clusters/{clusterName}/shardclusters:
    get:
      description: This endpoint retrieves the shard clusters for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of shard clusters
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Retrieve shard clusters for a specific cluster
      tags:
      - ClusterTopology
  /api/clusters/{clusterName}/sphinx/indexes:
    get:
      consumes:
      - application/json
      description: Get the Sphinx indexes for a given cluster
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Sphinx Indexes
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "404":
          description: Something went wrong
          schema:
            type: string
        "500":
          description: Cluster Not Found
          schema:
            type: string
      summary: Get Sphinx Indexes
      tags:
      - Proxies
  /api/clusters/{clusterName}/status:
    get:
      description: This endpoint retrieves the status of a specified cluster and returns
        it in JSON format.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Cluster status
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: No cluster found
          schema:
            type: string
      summary: Retrieve status of a cluster
      tags:
      - Cluster
  /api/clusters/{clusterName}/subscribe:
    post:
      consumes:
      - application/json
      description: This endpoint allows a user to subscribe to a specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: User Form
        in: body
        name: userform
        required: true
        schema:
          $ref: '#/definitions/cluster.UserForm'
      produces:
      - application/json
      responses:
        "200":
          description: Email sent to admin!
          schema:
            type: string
        "400":
          description: Error in request
          schema:
            type: string
        "401":
          description: 'Error logging in to gitlab: Token credentials is not valid'
          schema:
            type: string
        "403":
          description: Error parsing JWT" / "Current user is not logged in via Gitlab!
          schema:
            type: string
        "409":
          description: User already subscribed on peer cluster!" / "Another user already
            subscribed on peer cluster!
          schema:
            type: string
        "500":
          description: No valid cluster" / "Peer does not have cloud18 setup!" / "Error
            sending email
          schema:
            type: string
      summary: Subscribe a user to a cluster
      tags:
      - Cloud18
  /api/clusters/{clusterName}/tags:
    get:
      description: This endpoint retrieves the tags for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of tags
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Retrieve tags for a specific cluster
      tags:
      - ClusterTags
  /api/clusters/{clusterName}/tests/actions/run/{testName}:
    post:
      consumes:
      - application/json
      description: This endpoint runs a specific test for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Test Name
        in: path
        name: testName
        required: true
        type: string
      - description: Provision the cluster before running the test
        in: formData
        name: provision
        type: string
      - description: Unprovision the cluster after running the test
        in: formData
        name: unprovision
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Test result
          schema:
            $ref: '#/definitions/cluster.Test'
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found
          schema:
            type: string
      summary: Run a specific test for a given cluster
      tags:
      - ClusterTest
  /api/clusters/{clusterName}/tests/actions/run/all:
    post:
      consumes:
      - application/json
      description: This endpoint runs all tests for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of test results
          schema:
            items:
              $ref: '#/definitions/cluster.Test'
            type: array
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found
          schema:
            type: string
      summary: Run all tests for a given cluster
      tags:
      - ClusterTest
  /api/clusters/{clusterName}/top:
    get:
      description: This endpoint retrieves the top metrics for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Server Name
        in: query
        name: serverName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Top metrics
          schema:
            additionalProperties: true
            type: object
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Retrieve top metrics for a specific cluster
      tags:
      - Cluster
  /api/clusters/{clusterName}/topology/alerts:
    get:
      description: Shows the alerts for that specific named cluster
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: A list of alerts
          schema:
            $ref: '#/definitions/cluster.Alerts'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Shows the alerts for that specific named cluster
      tags:
      - ClusterTopology
  /api/clusters/{clusterName}/topology/crashes:
    get:
      description: This endpoint retrieves the crashes for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of crashes
          schema:
            items:
              type: string
            type: array
        "500":
          description: Cluster Not Found
          schema:
            type: string
      summary: Retrieve crashes for a specific cluster
      tags:
      - Cluster
  /api/clusters/{clusterName}/topology/logs:
    get:
      description: This endpoint retrieves the logs for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of logs
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Retrieve logs for a specific cluster
      tags:
      - ClusterTopology
  /api/clusters/{clusterName}/topology/master:
    get:
      description: This endpoint retrieves the master of a specified cluster and returns
        it in JSON format.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Master server
          schema:
            $ref: '#/definitions/cluster.ServerMonitor'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Retrieve master of a cluster
      tags:
      - ClusterTopology
  /api/clusters/{clusterName}/topology/proxies:
    get:
      description: Shows the proxies for that specific named cluster
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: A list of proxies
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Shows the proxies for that specific named cluster
      tags:
      - ClusterTopology
  /api/clusters/{clusterName}/topology/servers:
    get:
      description: This endpoint retrieves the servers for the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of servers
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Retrieve servers for a specific cluster
      tags:
      - ClusterTopology
  /api/clusters/{clusterName}/topology/slaves:
    get:
      description: Shows the slaves for that specific named cluster
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: A list of slaves
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Shows the slaves for that specific named cluster
      tags:
      - ClusterTopology
  /api/clusters/{clusterName}/users/add:
    post:
      consumes:
      - application/json
      description: Adds a new user to the specified cluster if the request is valid
        and the user has the necessary permissions.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: User Form
        in: body
        name: userform
        required: true
        schema:
          $ref: '#/definitions/cluster.UserForm'
      produces:
      - application/json
      responses:
        "200":
          description: User added successfully
          schema:
            type: string
        "400":
          description: Error in request
          schema:
            type: string
        "403":
          description: No Valid ACL
          schema:
            type: string
        "500":
          description: Error adding new user" or "No valid cluster
          schema:
            type: string
      summary: Add a new user to a cluster
      tags:
      - User
  /api/clusters/{clusterName}/users/drop:
    post:
      consumes:
      - application/json
      description: Drops a user from the specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: User Form
        in: body
        name: userform
        required: true
        schema:
          $ref: '#/definitions/cluster.UserForm'
      produces:
      - application/json
      responses:
        "200":
          description: User dropped successfully
          schema:
            type: string
        "400":
          description: Error in request
          schema:
            type: string
        "403":
          description: No Valid ACL
          schema:
            type: string
        "500":
          description: Error dropping user" or "No valid cluster
          schema:
            type: string
      summary: Drop a cluster user
      tags:
      - User
  /api/clusters/{clusterName}/users/send-credentials:
    post:
      consumes:
      - application/json
      description: This endpoint sends the credentials to the specified user via email.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Credential Mail Form
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/server.CredentialMailForm'
      produces:
      - application/json
      responses:
        "200":
          description: Credentials sent to user!
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Error sending email
          schema:
            type: string
      summary: Send credentials to a specific user
      tags:
      - User
  /api/clusters/{clusterName}/users/update:
    post:
      consumes:
      - application/json
      description: Updates the user information for a specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: User Form
        in: body
        name: userform
        required: true
        schema:
          $ref: '#/definitions/cluster.UserForm'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            type: string
        "400":
          description: Error in request
          schema:
            type: string
        "403":
          description: No Valid ACL
          schema:
            type: string
        "500":
          description: Error updating user" or "No valid cluster
          schema:
            type: string
      summary: Update a cluster user
      tags:
      - User
  /api/clusters/actions/add/{clusterName}:
    post:
      consumes:
      - application/json
      description: Adds a new cluster to the replication manager. If the cluster already
        exists, it returns an error.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Cluster Form
        in: body
        name: cluster
        required: true
        schema:
          $ref: '#/definitions/cluster.ClusterForm'
      produces:
      - application/json
      responses:
        "200":
          description: Cluster added successfully
          schema:
            $ref: '#/definitions/cluster.Cluster'
        "400":
          description: Error in request or Cluster already exists
          schema:
            type: string
        "500":
          description: User is not valid
          schema:
            type: string
      summary: Add a new cluster
      tags:
      - Cluster
  /api/clusters/actions/delete/{clusterName}:
    delete:
      description: Deletes a cluster identified by its name.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Cluster deleted successfully
          schema:
            type: string
        "400":
          description: Invalid cluster name
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete a cluster
      tags:
      - Cluster
  /api/clusters/for-sale:
    get:
      description: This endpoint returns a list of peer clusters that are available
        for sale, excluding those that are booked by the requesting user.
      parameters:
      - description: JWT token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of peer clusters available for sale
          schema:
            items:
              $ref: '#/definitions/config.PeerCluster'
            type: array
        "401":
          description: Unauthenticated resource
          schema:
            type: string
        "500":
          description: Failed to get token claims or Error Marshal
          schema:
            type: string
      summary: Retrieve peer clusters for sale
      tags:
      - Cloud18
  /api/clusters/peers:
    get:
      description: This endpoint retrieves the peer clusters that a user has access
        to.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of peer clusters
          schema:
            items:
              $ref: '#/definitions/config.PeerCluster'
            type: array
        "401":
          description: Unauthenticated resource
          schema:
            type: string
        "500":
          description: Failed to get token claims or Error Marshal
          schema:
            type: string
      summary: Retrieve peer clusters for a user
      tags:
      - Cloud18
  /api/clusters/settings/actions/reload-clusters-plans:
    post:
      description: This endpoint reloads the cluster plans for all clusters.
      responses:
        "200":
          description: Successfully reloaded plans
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Reload cluster plans
      tags:
      - ClusterActions
  /api/clusters/settings/actions/set/{settingName}/{settingValue}:
    post:
      consumes:
      - application/json
      description: This endpoint sets the global settings for the server.
      parameters:
      - description: Setting Name
        in: path
        name: settingName
        required: true
        type: string
      - description: Cluster Name
        in: path
        name: clusterName
        type: string
      - description: Setting Value
        in: path
        name: settingValue
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully set setting
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Set global settings for the server
      tags:
      - ClusterSettings
  /api/clusters/settings/actions/switch/{settingName}:
    post:
      consumes:
      - application/json
      description: This endpoint switches the global settings for the server.
      parameters:
      - description: Setting Name
        in: path
        name: settingName
        required: true
        type: string
      - description: Cluster Name
        in: path
        name: clusterName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully switched setting
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: No cluster
          schema:
            type: string
      summary: Switch global settings for the server
      tags:
      - GlobalSetting
  /api/configs/grafana:
    get:
      description: Returns a list of Grafana files from the specified directory.
      produces:
      - application/json
      responses:
        "200":
          description: List of Grafana files
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: List Grafana files
      tags:
      - Public
  /api/heartbeat:
    get:
      consumes:
      - application/json
      description: Returns the heartbeat status of the replication manager.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.Heartbeat'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Monitor Heartbeat
      tags:
      - Public
  /api/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token upon successful login.
      parameters:
      - description: User credentials
        in: body
        name: userCredentials
        required: true
        schema:
          $ref: '#/definitions/server.userCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token
          schema:
            $ref: '#/definitions/server.token'
        "401":
          description: Invalid credentials
          schema:
            type: string
        "403":
          description: Error in request
          schema:
            type: string
        "429":
          description: Too many requests
          schema:
            type: string
        "500":
          description: Error signing token
          schema:
            type: string
      summary: User login
      tags:
      - Auth
  /api/monitor:
    get:
      consumes:
      - application/json
      description: This endpoint processes the replication manager requests, validates
        cluster ACLs, and returns the cluster list in JSON format.
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with replication manager details
          schema:
            $ref: '#/definitions/server.ReplicationManager'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Handles replication manager requests
      tags:
      - Public
  /api/prometheus:
    get:
      description: Fetches Prometheus metrics for all servers in all clusters managed
        by the replication manager.
      produces:
      - text/plain
      responses:
        "200":
          description: Prometheus metrics
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Fetch Prometheus metrics
      tags:
      - Public
  /api/repocomp/current:
    get:
      description: Reads the current repository component from the specified directory
        and returns its content.
      produces:
      - text/plain
      responses:
        "200":
          description: Current repository component content
          schema:
            type: string
        "404":
          description: 404 Something went wrong - Not Found
          schema:
            type: string
      summary: Retrieve current repository component
      tags:
      - Public
  /api/status:
    get:
      description: Returns the status of the replication manager indicating whether
        it is running or starting.
      produces:
      - application/json
      responses:
        "200":
          description: '{"alive": "running"} or {"alive": "starting"}'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Replication Manager Status
      tags:
      - Public
  /api/terms:
    get:
      description: This endpoint returns the terms managed by the replication manager.
      produces:
      - text/plain
      responses:
        "200":
          description: Terms
          schema:
            type: string
      summary: Retrieves terms
      tags:
      - Cloud18
  /api/timeout:
    get:
      description: This endpoint is used to check if the replication manager is running.
        It will respond with a JSON object after a delay of 1200 seconds.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Check if the replication manager is running
      tags:
      - Public
  /cluster/{clusterName}/actions/dropserver/{host}/{port}:
    post:
      consumes:
      - application/json
      description: This endpoint allows dropping a server monitor or proxy monitor
        from a specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Host
        in: path
        name: host
        required: true
        type: string
      - description: Port
        in: path
        name: port
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Monitor dropped successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found
          schema:
            type: string
      summary: Drop a server monitor from a cluster
      tags:
      - ClusterMonitor
  /cluster/{clusterName}/actions/dropserver/{host}/{port}/{type}:
    post:
      consumes:
      - application/json
      description: This endpoint allows dropping a server monitor or proxy monitor
        from a specified cluster.
      parameters:
      - description: Cluster Name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Monitor Type (proxy or database)
        in: path
        name: type
        type: string
      - description: Host
        in: path
        name: host
        required: true
        type: string
      - description: Port
        in: path
        name: port
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Monitor dropped successfully
          schema:
            type: string
        "403":
          description: No valid ACL
          schema:
            type: string
        "500":
          description: Cluster Not Found
          schema:
            type: string
      summary: Drop a server monitor from a cluster
      tags:
      - ClusterMonitor
swagger: "2.0"
